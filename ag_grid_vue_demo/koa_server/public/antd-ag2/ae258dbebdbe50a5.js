import{RequestItem,BatchRequest}from"@/components/AgGridTable/common/utils/batchRequest";import{exportExcelFileBlob,formatSpecDate}from"@/components/AgGridTable/common/utils/exportExcel.js";import{SuccessModel}from"@/components/AgGridTable/common/utils/exceptions.js";async function batchRequestFun(e,s){console.log("config123123123",e);const{requestParams:t,pageParams:a}=e.pageOptions,{maxNum:o}=e.requestOptions,{data:n,...c}=t,{pageNum:l,pageSize:r,...u}=n,{totalPage:i}=a,m=[];s(new SuccessModel({message:"任务拼装进行中",status:"config.processing"}));for(let d=l;d<=i;d++){const e=new RequestItem({reqParams:{id:d,...c,data:{pageSize:r,pageNum:d,...u}},validateReqParamsFun:e=>{if(!e?.url)return"请求ajaxItem不能为空";const s=e?.method;if(s){const e=["GET","POST"];if(!e.includes(s.toUpperCase()))return`请求方式不满足【${e.join("/")}】其中之一`}},dealResFun:e=>{const s={status:RequestItem.REQ_FAIL_STATUS,response:null};return 200===e?.code?(s.status=RequestItem.REQ_SUCCESS_STATUS,s.response=e?.data):500===e?.code&&(s.status=RequestItem.REQ_FAIL_STATUS,s.response=e?.data),s}});m.push(e)}s(new SuccessModel({message:"任务拼装完毕",status:"config.success"}));const g=new BatchRequest({ajaxLists:m,maxNum:o,callback:s});s(new SuccessModel({message:"请求进行中",status:"request.processing"}));const p=await g.concurRequest();return g.dealResult(p)}function sleep(e=1500){return Promise((s=>{setTimeout((()=>{s(!0)}),e)}))}self.onmessage=async function(e){try{const s=e.data;console.log("batchExportExcelWorker.js中配置参数=====>",s);const t=s.requestOptions.responseType;batchRequestFun(s,(e=>{console.log("回调函数",e),"asyncFile"===t?(console.log("回调函数asyncFile",e),self.postMessage({status:e.status,data:null,code:e.code,message:e.message})):self.postMessage({status:e.status,data:null,code:e.code,message:e.message})})).then((async e=>{if(console.log("最终result=====>",e),"file"===t){self.postMessage({status:"exportExcel.processing",message:`请求完毕【${e.length}/${e.length}】，文件导出准备中...`});const t=await exportExcelFileBlob(e,s),a=s.exportFileOptions;self.postMessage({status:"exportExcel.processing",message:"文件导出中,请不要刷新...",data:t,fileNameObj:a})}else"data"===t&&self.postMessage({status:"request.success",message:`请求完毕【${e.length}/${e.length}】,数据加载中...`,data:e})})).then((()=>{self.postMessage({status:"exportExcel.success",message:"web worker 任务结束"})}))}catch(s){self.postMessage({status:"config.failed",message:`orderWorker.js线程执行失败，${s.message||""}`})}};const ERROR=()=>{self.postMessage({message:"error",data:[]}),self.close()};self.addEventListener("error",(e=>{ERROR(),console.log("ERROR: Line ",e.lineno," in ",e.filename,": ",e.message)}));
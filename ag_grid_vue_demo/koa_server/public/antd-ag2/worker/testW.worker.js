import{RequestItem,BatchRequest}from"@/components/AgGridTable/common/utils/batchRequest";import{exportExcelFun}from"@/components/AgGridTable/common/utils/exportExcel";async function batchRequestFun(e,s){console.log("config123123123",e);const{requestParams:t,pageParams:a}=e,{data:o,...n}=t,{pageNum:r,pageSize:l,...c}=o,{totalPage:u}=a,m=[];for(let d=r;d<=u;d++){const e=new RequestItem({reqParams:{id:d,...n,data:{pageSize:l,pageNum:d,...c}},validateReqParamsFun:e=>{if(!e?.url)return"请求ajaxItem不能为空";const s=e?.method;if(s){const e=["GET","POST"];if(!e.includes(s.toUpperCase()))return`请求方式不满足【${e.join("/")}】其中之一`}},dealResFun:e=>{const s={status:RequestItem.REQ_FAIL_STATUS,response:null};return 200===e?.code?(s.status=RequestItem.REQ_SUCCESS_STATUS,s.response=e?.data):500===e?.code&&(s.status=RequestItem.REQ_FAIL_STATUS,s.response=e?.data),s}});m.push(e)}const g=new BatchRequest({ajaxLists:m,maxNum:2,callback:s}),i=await g.concurRequest();return i}function getSortabledFields(e){console.log("sortabledFields",e);let s=[],t=[];return e.forEach((e=>{e.hide||(s.push(e.headerName),t.push(e.field))})),{tHeader:s,filterVal:t}}function getTableData(e){const s=[];return e.forEach((e=>{"success"===e.reqStatus&&s.push(...e.response)})),s}self.onmessage=async function(e){try{const s=e.data;console.log("batchExportExcelWorker.js中配置参数=====>",s);const t=e=>{const s=e.map((e=>({reqParams:e.reqParams,reqStatus:e.reqStatus,response:e.response,responseMsg:e.responseMsg})));return s};batchRequestFun(s,(e=>{console.log("回调函数",e);const{status:s,data:a,message:o}=e,{result:n}=a;self.postMessage({status:s,message:o,postResult:t(n)})})).then((e=>{console.log("result=====>",e);const t=getTableData(e),{tHeader:a,filterVal:o}=getSortabledFields(s?.sortabledFields);console.log("tableData123123123",t);const n=exportExcelFun({tHeader:a,filterVal:o,tableData:t});console.log("newBolb13123",n),self.postMessage({status:"request.success",message:`请求完毕【${e.length}/${e.length}】`,postResult:n})}))}catch(s){console.error(s.message||"batchExportExcelWorker.js执行失败")}};const ERROR=()=>{self.postMessage({message:"error",data:[]}),self.close()};self.addEventListener("error",(e=>{ERROR(),console.log("ERROR: Line ",e.lineno," in ",e.filename,": ",e.message)})),self.addEventListener("message",(async()=>{const e={test:"123134"};self.postMessage({message:"success",data:e})}),!1);
{"version":3,"file":"js/61.d2f62146.js","mappings":"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","sources":["webpack://AG/./src/components/AgGridTable/common/utils/exportExcel.js","webpack://AG/./src/views/pages/order/order-manage/testW.worker.js","webpack://AG/webpack/bootstrap","webpack://AG/webpack/runtime/chunk loaded","webpack://AG/webpack/runtime/define property getters","webpack://AG/webpack/runtime/ensure chunk","webpack://AG/webpack/runtime/get javascript chunk filename","webpack://AG/webpack/runtime/get mini-css chunk filename","webpack://AG/webpack/runtime/global","webpack://AG/webpack/runtime/hasOwnProperty shorthand","webpack://AG/webpack/runtime/publicPath","webpack://AG/webpack/runtime/importScripts chunk loading","webpack://AG/webpack/runtime/startup chunk dependencies","webpack://AG/webpack/startup"],"sourcesContent":["import * as XLSX from \"xlsx\";\r\n\r\nfunction datenum(v, date1904) {\r\n  if (date1904) v += 1462;\r\n  var epoch = Date.parse(v);\r\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\r\n}\r\n\r\nfunction Workbook() {\r\n  if (!(this instanceof Workbook)) return new Workbook();\r\n  this.SheetNames = [];\r\n  this.Sheets = {};\r\n}\r\n\r\nfunction sheet_from_array_of_arrays(data) {\r\n  var ws = {};\r\n  var range = {\r\n    s: {\r\n      c: 10000000,\r\n      r: 10000000,\r\n    },\r\n    e: {\r\n      c: 0,\r\n      r: 0,\r\n    },\r\n  };\r\n  for (var R = 0; R != data.length; ++R) {\r\n    for (var C = 0; C != data[R].length; ++C) {\r\n      if (range.s.r > R) range.s.r = R;\r\n      if (range.s.c > C) range.s.c = C;\r\n      if (range.e.r < R) range.e.r = R;\r\n      if (range.e.c < C) range.e.c = C;\r\n      var cell = {\r\n        v: data[R][C],\r\n      };\r\n      if (cell.v == null) continue;\r\n      var cell_ref = XLSX.utils.encode_cell({\r\n        c: C,\r\n        r: R,\r\n      });\r\n\r\n      if (typeof cell.v === \"number\") cell.t = \"n\";\r\n      else if (typeof cell.v === \"boolean\") cell.t = \"b\";\r\n      else if (cell.v instanceof Date) {\r\n        cell.t = \"n\";\r\n        cell.z = XLSX.SSF._table[14];\r\n        cell.v = datenum(cell.v);\r\n      } else cell.t = \"s\";\r\n\r\n      ws[cell_ref] = cell;\r\n    }\r\n  }\r\n  if (range.s.c < 10000000) ws[\"!ref\"] = XLSX.utils.encode_range(range);\r\n  return ws;\r\n}\r\n\r\nfunction s2ab(s) {\r\n  // let maxSize = 0x7fffffff; // 2GB, 16-bit platforms are limited to 2GB\r\n  // var buf = new ArrayBuffer(maxSize);\r\n  var buf = new ArrayBuffer(s.length);\r\n  var view = new Uint8Array(buf);\r\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;\r\n  return buf;\r\n}\r\n\r\nexport function export_json_to_excel(th, jsonData) {\r\n  var data = jsonData;\r\n  data.unshift(th);\r\n  var ws_name = \"SheetJS\";\r\n\r\n  var wb = new Workbook(),\r\n    ws = sheet_from_array_of_arrays(data);\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: \"xlsx\",\r\n    bookSST: false,\r\n    type: \"binary\",\r\n  });\r\n  return s2ab(wbout);\r\n}\r\n\r\n/**\r\n * @description: Excel导表方法封装\r\n * @param {string[]} tHeader 表格第一行标题，例如['吸粉公众号', '吸粉数', '日期']\r\n * @param {object[]} data  过滤处理的数据\r\n * @param {string[]} lastRow  表格自定义最后一行\r\n * @param {string} title  导出表格文件的标题\r\n */\r\nfunction exportExcel(dataObj) {\r\n  const { tHeader, data, lastRow } = dataObj;\r\n  data.push(...lastRow); // 在导表的最后一行加入总数\r\n  const newBold = export_json_to_excel(tHeader, data); // 最后一个是表名字\r\n  return newBold;\r\n}\r\n\r\n/**\r\n * @description: Excel数据过滤数据方法，例如时间格式 【将金额转为数字】\r\n * @param {string[]} filterVal 过滤键值\r\n * @param {object[]} jsonData 过滤数据\r\n * @return {} 返回对应的数据\r\n */\r\nfunction formatJson(filterVal, jsonData) {\r\n  const formatExcelData = (str) => {\r\n    if (str) {\r\n      if (/[Fee|Money|Price|Pay|Weight|Volume]$/g.test(str)) {\r\n        const val = Number(str);\r\n        // 导出excel超出11位，会被转换为科学计数法，通过加入' ，强制转换为字符串\r\n        if (isNaN(val)) {\r\n          return str;\r\n        } else {\r\n          if (val.toString().length > 10) {\r\n            return `'${val}`;\r\n          } else {\r\n            return val;\r\n          }\r\n        }\r\n      } else {\r\n        return str;\r\n      }\r\n    } else {\r\n      return str;\r\n    }\r\n  };\r\n  return jsonData.map((v) =>\r\n    filterVal.map((j) => {\r\n      const str = v[j];\r\n      return formatExcelData(str);\r\n    })\r\n  );\r\n}\r\n\r\n/**\r\n * @description: 导柱形图excel表\r\n * @param {string[]} tHeader 表头数据 ，现在只适用一级表头， string[] , 例如['时间', '吸粉数']\r\n * @param {string[]} filterVal 表格列数据，必须与表头相对应，string[] , 例如['time', 'number']\r\n * @param {object[] } tableData 表格行数据\r\n * @param {string} title 导出表格的文件标题\r\n * @param {any[]} lastRow 可自定义最后一行数据， string[] ，注意其长度最好是与表头相对应\r\n * @return {*}\r\n */\r\n\r\n// 导出极限为 100M, 超出100M会报错\r\nexport function exportExcelFun(data) {\r\n  return new Promise((resolve) => {\r\n    const cData = Array.isArray(data.tableData)\r\n      ? formatJson(data.filterVal, data.tableData)\r\n      : [];\r\n    const dataObj = {\r\n      tHeader: data.tHeader,\r\n      filterVal: data.filterVal,\r\n      lastRow: data.lastRow || [],\r\n      title: data.title || \"downLoadExcel\",\r\n      data: cData,\r\n    };\r\n    const parseBolb = exportExcel(dataObj);\r\n    resolve(parseBolb);\r\n  });\r\n}\r\n\r\nfunction isNotEmptyArr(arr) {\r\n  return Array.isArray(arr) && arr.length;\r\n}\r\n\r\n// 获取排序字段\r\nfunction getSortabledFields(sortabledFields) {\r\n  let tHeader = [];\r\n  let filterVal = [];\r\n  sortabledFields.forEach((ele) => {\r\n    if (!ele.hide) {\r\n      tHeader.push(ele.headerName);\r\n      filterVal.push(ele.field);\r\n    }\r\n  });\r\n  return {\r\n    tHeader,\r\n    filterVal,\r\n  };\r\n}\r\n\r\n// 导出最大限制，为100M , 超出100M解析会出问题\r\nexport const EXPORT_EXCEL_FILE_SIZE_LIMIT = 90;\r\n// 导出excel超出限制的最大分割数\r\nexport const EXPORT_EXCEL_SPLIT_MAX_NUM = 15000;\r\n\r\n/**\r\n * @description: 通过ArrayBuffer计算数据大小MB\r\n * @param {*} buf 实例化的ArrayBuffer\r\n * @param {*} sizeUnit 计算的单位 ， MB / KB\r\n * @return {*}\r\n */\r\nexport function calcFileSizeByBuf(buf, sizeUnit = \"MB\") {\r\n  if (sizeUnit === \"MB\") {\r\n    // 转换为MB (1024 bytes per KB, 1024 KB per MB)\r\n    const sizeInMB = buf.byteLength / 1024 / 1024;\r\n    const sizeInMBVal = sizeInMB.toFixed(2);\r\n    console.log(`Size in MB: ${sizeInMBVal}`);\r\n    return sizeInMBVal;\r\n  } else if (sizeUnit === \"KB\") {\r\n    // 转换为KB (1024 bytes per KB)\r\n    const sizeInKB = buf.byteLength / 1024;\r\n    const sizeInKBVal = sizeInKB.toFixed(2);\r\n    console.log(`Size in KB: ${sizeInKBVal}`);\r\n    return sizeInKBVal;\r\n  }\r\n}\r\n\r\n// 导出excelexcel， 通过表格数据和排序字段\r\nexport function exportExcelBySortFieldAndTableData(\r\n  tableData = [],\r\n  sortabledFields\r\n) {\r\n  const { tHeader, filterVal } = getSortabledFields(sortabledFields);\r\n\r\n  if (isNotEmptyArr(tHeader) && isNotEmptyArr(filterVal)) {\r\n    const newBolb = exportExcelFun({\r\n      tHeader,\r\n      filterVal,\r\n      tableData,\r\n    });\r\n    return newBolb;\r\n  } else {\r\n    throw new Error(\"参数排序字段不能为空或者全部隐藏\");\r\n  }\r\n}\r\n\r\n// 格式化\r\nconst formatDateStr = (n) => (n > 9 ? n : \"0\" + n);\r\n\r\n/**\r\n * @description: 日期时间格式化\r\n * @param {number} offsetHour 偏移小时\r\n * @return {*}\r\n */\r\nexport function formatSpecDate(offsetHour = 0) {\r\n  let date = new Date();\r\n  if (offsetHour) {\r\n    const cDate = date.getTime() + offsetHour * 60 * 1000 * 60;\r\n    date = new Date(cDate);\r\n  }\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hour = date.getHours();\r\n  const minute = date.getMinutes();\r\n\r\n  return `${year}${formatDateStr(month)}${formatDateStr(day)}${formatDateStr(\r\n    hour\r\n  )}${formatDateStr(minute)}`;\r\n}\r\n\r\nfunction getTableData(result) {\r\n  const tableData = [];\r\n  result.forEach((ele) => {\r\n    if (ele.reqStatus === \"success\") {\r\n      tableData.push(...ele.response);\r\n    }\r\n  });\r\n  return tableData;\r\n}\r\n\r\n// 导出excel文件blob数据\r\nexport async function exportExcelFileBlob(result, config) {\r\n  console.log(\"导出excel文件blob数据\");\r\n\r\n  const tableData = getTableData(result);\r\n  const tableDataLen = tableData.length;\r\n  console.log(\"tableDataLen123123123\", tableDataLen);\r\n  const sortabledFields = config?.pageOptions?.sortabledFields;\r\n  let splitStep = EXPORT_EXCEL_SPLIT_MAX_NUM;\r\n  const { tHeader, filterVal } = getSortabledFields(sortabledFields);\r\n\r\n  if (isNotEmptyArr(tHeader) && isNotEmptyArr(filterVal)) {\r\n    const isOnceExportPass = splitStep >= tableDataLen;\r\n    console.log(\"123123123123\", isOnceExportPass);\r\n\r\n    // 如果超出导出限制，则分批到处 , 15000 为一批\r\n    const splitTableData = [];\r\n    let len = Math.ceil(tableData.length / splitStep);\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      const splitArr = tableData.slice(i * splitStep, (i + 1) * splitStep);\r\n      const cNewBolb = await exportExcelFun({\r\n        tHeader,\r\n        filterVal,\r\n        tableData: splitArr,\r\n      });\r\n      console.log(\"cNewBolb123123123\", cNewBolb);\r\n      splitTableData.push(cNewBolb);\r\n    }\r\n\r\n    console.log(\"splitTableData123123123\", splitTableData);\r\n\r\n    return splitTableData;\r\n  } else {\r\n    throw new Error(\"参数排序字段不能为空或者全部隐藏\");\r\n  }\r\n}\r\n","/*\r\n * @Author: junsong Chen 779217162@qq.com\r\n * @Date: 2024-05-31 10:19:02\r\n * @LastEditTime: 2024-06-06 17:03:11\r\n * @Description:\r\n */\r\nimport {\r\n  RequestItem,\r\n  BatchRequest,\r\n} from \"@/components/AgGridTable/common/utils/batchRequest\";\r\nimport { exportExcelFun } from \"@/components/AgGridTable/common/utils/exportExcel\";\r\n\r\n/**\r\n * @description: 此方法用于所有接口全部请求完毕后，一起返回\r\n * @param {*} config\r\n * @return {*}\r\n */\r\nasync function batchRequestFun(config, callback) {\r\n  console.log(\"config123123123\", config);\r\n  const { requestParams, pageParams } = config;\r\n  const { data, ...queryParams } = requestParams;\r\n  const { pageNum, pageSize, ...resetDataObj } = data;\r\n  const { totalPage } = pageParams;\r\n  const ajaxLists = [];\r\n  for (let i = pageNum; i <= totalPage; i++) {\r\n    const newRequestItem = new RequestItem({\r\n      reqParams: {\r\n        id: i,\r\n        ...queryParams,\r\n        data: {\r\n          pageSize,\r\n          pageNum: i,\r\n          ...resetDataObj,\r\n        },\r\n      },\r\n      // 校验请求参数方法\r\n      validateReqParamsFun: (params) => {\r\n        if (!params?.url) {\r\n          return \"请求ajaxItem不能为空\";\r\n        }\r\n        const methodVal = params?.method;\r\n        if (methodVal) {\r\n          const methodArr = [\"GET\", \"POST\"];\r\n          if (!methodArr.includes(methodVal.toUpperCase()))\r\n            return `请求方式不满足【${methodArr.join(\"/\")}】其中之一`;\r\n        }\r\n      },\r\n      // 处理res响应\r\n      dealResFun: (res) => {\r\n        const resObj = {\r\n          status: RequestItem.REQ_FAIL_STATUS,\r\n          response: null,\r\n        };\r\n        if (res?.code === 200) {\r\n          resObj.status = RequestItem.REQ_SUCCESS_STATUS;\r\n          resObj.response = res?.data;\r\n        } else if (res?.code === 500) {\r\n          resObj.status = RequestItem.REQ_FAIL_STATUS;\r\n          resObj.response = res?.data;\r\n        }\r\n        return resObj;\r\n      },\r\n    });\r\n    ajaxLists.push(newRequestItem);\r\n  }\r\n\r\n  const newBatchRequest = new BatchRequest({\r\n    ajaxLists,\r\n    maxNum: 2,\r\n    callback,\r\n  });\r\n\r\n  // 第一种方式，请求所有\r\n  const results = await newBatchRequest.concurRequest();\r\n  return results;\r\n}\r\n\r\n// 获取排序字段\r\nfunction getSortabledFields(sortabledFields) {\r\n  console.log(\"sortabledFields\", sortabledFields);\r\n  let tHeader = [];\r\n  let filterVal = [];\r\n  sortabledFields.forEach((ele) => {\r\n    if (!ele.hide) {\r\n      tHeader.push(ele.headerName);\r\n      filterVal.push(ele.field);\r\n    }\r\n  });\r\n  return {\r\n    tHeader,\r\n    filterVal,\r\n  };\r\n}\r\n\r\nfunction getTableData(result) {\r\n  const tableData = [];\r\n  result.forEach((ele) => {\r\n    if (ele.reqStatus === \"success\") {\r\n      tableData.push(...ele.response);\r\n    }\r\n  });\r\n  return tableData;\r\n}\r\n\r\n// Web Workers的部分代码（在Workers中计算两个数的和）\r\nself.onmessage = async function (ele) {\r\n  try {\r\n    const config = ele.data;\r\n    console.log(\"batchExportExcelWorker.js中配置参数=====>\", config);\r\n\r\n    const dealResult = (result) => {\r\n      const postResult = result.map((ele) => {\r\n        return {\r\n          reqParams: ele.reqParams,\r\n          reqStatus: ele.reqStatus,\r\n          response: ele.response,\r\n          responseMsg: ele.responseMsg,\r\n        };\r\n      });\r\n      return postResult;\r\n    };\r\n\r\n    // 获取到阶段性数据\r\n    batchRequestFun(config, (ele) => {\r\n      console.log(\"回调函数\", ele);\r\n      const { status, data, message } = ele;\r\n      const { result } = data;\r\n      self.postMessage({\r\n        status,\r\n        message,\r\n        postResult: dealResult(result),\r\n      });\r\n      // return index > 1;\r\n    }).then((result) => {\r\n      console.log(\"result=====>\", result);\r\n      const tableData = getTableData(result);\r\n      const { tHeader, filterVal } = getSortabledFields(\r\n        config?.sortabledFields\r\n      );\r\n\r\n      console.log(\"tableData123123123\", tableData);\r\n\r\n      const newBolb = exportExcelFun({\r\n        tHeader,\r\n        filterVal,\r\n        tableData: tableData,\r\n      });\r\n\r\n      console.log(\"newBolb13123\", newBolb);\r\n      // 将结果发送回主线程, 不能携带DOM，函数等\r\n      self.postMessage({\r\n        status: \"request.success\",\r\n        message: `请求完毕【${result.length}/${result.length}】`,\r\n        postResult: newBolb,\r\n      });\r\n    });\r\n  } catch (err) {\r\n    console.error(err.message || `batchExportExcelWorker.js执行失败`);\r\n  }\r\n};\r\n\r\n/**\r\n * 处理错误的函数 主线程可以监听 Worker 是否发生错误。\r\n * 如果发生错误，Worker 会触发主线程的`error`事件。\r\n */\r\nconst ERROR = () => {\r\n  // 发送错误信息\r\n  self.postMessage({ message: \"error\", data: [] });\r\n\r\n  // `self.close()`用于在 Worker 内部关闭自身。\r\n  self.close();\r\n};\r\n\r\n// 错误处理\r\nself.addEventListener(\"error\", (event) => {\r\n  ERROR();\r\n\r\n  // 输出错误信息\r\n  console.log(\r\n    \"ERROR: Line \",\r\n    event.lineno,\r\n    \" in \",\r\n    event.filename,\r\n    \": \",\r\n    event.message\r\n  );\r\n});\r\n\r\n/**\r\n * @description: Worker 线程内部需要有一个监听函数，监听`message`事件。 工作线程接收到主线程的消息\r\n * @param {object} event event.data  获取到主线程发送过来的数据\r\n */\r\nself.addEventListener(\r\n  \"message\",\r\n  async () => {\r\n    // 向主线程发送消息\r\n    // 发送消息\r\n    const data = {\r\n      test: \"123134\",\r\n    };\r\n    self.postMessage({ message: \"success\", data });\r\n  },\r\n  false\r\n);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [56], function() { return __webpack_require__(99061); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"456899ff\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/public/antd-ag2/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t61: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkAG\"] = self[\"webpackChunkAG\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(56).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["datenum","v","date1904","epoch","Date","parse","UTC","Workbook","this","SheetNames","Sheets","sheet_from_array_of_arrays","data","ws","range","s","c","r","e","R","length","C","cell","cell_ref","XLSX","encode_cell","t","z","_table","encode_range","s2ab","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","export_json_to_excel","th","jsonData","unshift","ws_name","wb","push","wbout","bookType","bookSST","type","exportExcel","dataObj","tHeader","lastRow","newBold","formatJson","filterVal","formatExcelData","str","test","val","Number","isNaN","toString","map","j","exportExcelFun","Promise","resolve","cData","Array","isArray","tableData","title","parseBolb","async","batchRequestFun","config","callback","console","log","requestParams","pageParams","queryParams","pageNum","pageSize","resetDataObj","totalPage","ajaxLists","newRequestItem","RequestItem","reqParams","id","validateReqParamsFun","params","url","methodVal","method","methodArr","includes","toUpperCase","join","dealResFun","res","resObj","status","REQ_FAIL_STATUS","response","code","REQ_SUCCESS_STATUS","newBatchRequest","BatchRequest","maxNum","results","concurRequest","getSortabledFields","sortabledFields","forEach","ele","hide","headerName","field","getTableData","result","reqStatus","self","onmessage","dealResult","postResult","responseMsg","message","postMessage","then","newBolb","err","error","ERROR","close","addEventListener","event","lineno","filename","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","d","definition","o","defineProperty","enumerable","get","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","installChunk","moreModules","runtime","pop","parentChunkLoadingFunction","importScripts","chunkLoadingGlobal","bind","next"],"sourceRoot":""}
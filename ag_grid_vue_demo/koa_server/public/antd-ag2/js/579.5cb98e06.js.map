{"version":3,"file":"js/579.5cb98e06.js","mappings":"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A,aACA,YAEA,kBAEA,OACA,OAEA,oBACA,eACA,MACA,CACA,mBACA,kBACA,sBACA,oBACA,6BACA,SACA,CACA,YACA,mBAIA,CACA,sBACA,iBACA,yBACA,oBACA,uCACA,SACA,CACA,aACA,2BAEA,CACA,aACA,wBAQA,eACA,CACA,wBACA,eACA,0BAEA,CACA,uBACA,eACA,0BAEA,CACA,aACA,eACA,0BAEA,CACA,eACA,mBACA,iBACA,SACA,uBACA,WACA,CACA,aACA,cACA,mBACA,wBAOA,cACA,YAEA,iBAEA,UACA,gBACA,iBACA,oBACA,kBACA,mBACA,yBACA,oBACA,6BACA,mBACA,wBACA,oBACA,oBACA,gBACA,yBACA,gCACA,2BACA,qBACA,kBACA,qBACA,qBACA,2BACA,2BACA,2BACA,4BACA,wBACA,yBACA,oBACA,qBACA,uBACA,oBACA,oBACA,qBACA,qBACA,iBACA,eACA,iBACA,sBACA,qBACA,sBACA,kBACA,kBACA,qBACA,wBACA,eACA,oBACA,mBACA,oBACA,gBACA,gBACA,mBACA,sBACA,sBACA,cACA,2BACA,gBACA,6BACA,gBACA,6BACA,mBACA,oBACA,oBACA,yBACA,qBACA,sBACA,yBACA,wBACA,qBACA,kBACA,iBACA,kBACA,+BACA,eACA,iBACA,mBACA,oBACA,4BACA,mBACA,oBACA,wBACA,yBACA,uBACA,wBACA,kBACA,oBACA,wBACA,0BACA,uBACA,eACA,wBACA,iBACA,wBACA,qBACA,iBACA,sBACA,sBACA,wBACA,8BACA,oBACA,0BACA,4BACA,iCACA,oBACA,0BACA,4BACA,iCACA,iBACA,wBACA,sBACA,kBACA,qBACA,kBACA,qBACA,wBACA,sBACA,qBACA,qBACA,wBAEA,eACA,eACA,CACA,gBACA,sBACA,SACA,0CAMA,oBAGA,cAEA,eAEA,EAEA,SAEA,eACA,wCACA,EAGA,WACA,kEAEA,6CACA,qCACA,QACA,kCAEA,2BACA,SACA,WACA,aACA,SACA,kBAEA,UAGA,GAFA,yBAEA,eACA,kCACA,2BACA,gCAGA,4BADA,KACA,iBAGA,kBACA,+BACA,GAGA,MACA,wCACA,IAEA,cACA,uCAEA,EAGA,iBACA,aACA,YACA,aACA,2BACA,sBACA,YACA,uBACA,QAEA,cACA,2BACA,uCAEA,qCAEA,GAEA,EAEA,gBACA,cACA,mCACA,qBACA,MACA,8BAEA,EAGA,sBACA,kBACA,mBACA,UACA,oBACA,uBACA,0BACA,MACA,mBACA,sBACA,2BACA,MACA,SACA,+BACA,MACA,SACA,YACA,MACA,cACA,iBACA,wCACA,MAEA,EAGA,uBACA,4BACA,SAEA,OADA,uBACA,GACA,SACA,YACA,yBACA,MAEA,EAGA,qBACA,QACA,mDAEA,2BACA,SACA,KAOA,OANA,eACA,SACA,qBACA,gBACA,IAEA,CACA,UACA,YAEA,EAEA,mBACA,cACA,iDACA,IACA,aACA,cAEA,qBACA,sBAEA,GACA,aAEA,eACA,sBACA,cACA,MACA,UACA,YAEA,SACA,8BAIA,YACA,QACA,aAGA,iEAGA,gBACA,SACA,qBAEA,mBACA,iBACA,kBAIA,QACA,EAGA,qBACA,gBACA,aACA,kBACA,gBACA,4BAIA,mBACA,0BAGA,iBAGA,wBACA,eACA,mBACA,yCACA,kBACA,4BAEA,aACA,YACA,cACA,kCAEA,YACA,EAGA,UACA,iBACA,oBACA,MACA,cACA,iBACA,KACA,MAEA,EACA,uDACA,IACA,uBACA,gBAEA,eAEA,eACA,sBACA,cACA,MACA,UACA,YAEA,SACA,8BAIA,YACA,QACA,aAGA,iEAEA,MACA,mDAEA,EAGA,sBACA,gBACA,aACA,kBACA,oJAEA,mBACA,QAEA,mBAKA,UACA,cAGA,qBAEA,gCAEA,4BAEA,cACA,CACA,cACA,IAEA,IACA,yBACA,qBAIA,mBACA,eACA,MACA,mDAEA,EAEA,gBACA,4BACA,IC3lBqoB,ICQjoB,GAAY,OACd,EACApC,EACA2B,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,O","sources":["webpack://AG/./src/components/AgGridTable/agTableMixins/index.js","webpack://AG/./src/views/pages/order/order-manage/index.vue?938e","webpack://AG/./src/views/pages/order/order-manage/components/AgRowActionBtn/index.vue?b577","webpack://AG/src/views/pages/order/order-manage/components/AgRowActionBtn/index.vue","webpack://AG/./src/views/pages/order/order-manage/components/AgRowActionBtn/index.vue?59ed","webpack://AG/./src/views/pages/order/order-manage/components/AgRowActionBtn/index.vue","webpack://AG/./src/components/AgGridTable/common/Worker/customerRequestWorker.js","webpack://AG/src/views/pages/order/order-manage/index.vue","webpack://AG/./src/views/pages/order/order-manage/index.vue?5f9e","webpack://AG/./src/views/pages/order/order-manage/index.vue"],"sourcesContent":["/*\r\n * @Author: junsong Chen 779217162@qq.com\r\n * @Date: 2024-01-29 15:22:57\r\n * @LastEditTime: 2024-07-20 23:47:32\r\n * @Description: 用于应用二次封装的组件的混入\r\n */\r\nimport { before, cloneDeep, isArray, isEmpty, isObject } from \"lodash\";\r\nimport { AgGridUtils, InitColumnDefs } from \"../common/agGrid-utils\";\r\nimport { getRandom6DigitNumber } from \"../common/utils/index\";\r\n\r\nconst AgGridTableMixins = {\r\n  data() {\r\n    return {\r\n      // 获取点击的行数据，用于表格的编辑和删除\r\n      editRowData: null,\r\n      // 当前选中的行数据，用于展示批量操作\r\n      rowSelectedList: null,\r\n      // 6位随机数\r\n      random6DigitNumber: getRandom6DigitNumber(),\r\n      // ag-grid表格整体配置项-- 用户自定义配置型\r\n      gridOptions: {\r\n        rowHeight: 36, // 行高，默认36\r\n      },\r\n      agTableOptions: {\r\n        // 主题可设置值为： alpine / balham / material\r\n        theme: \"alpine\",\r\n        // 表格样式style\r\n        style: null,\r\n        // 表格实例化后的自定义api\r\n        agTableApi: null,\r\n        // 初始化表格方法，可用于重新刷新表格\r\n        initTable: null,\r\n        // 初始化列头实例\r\n        initColumnDefs: null,\r\n        // 列头设置，先有列头，再有行数据，如果有行数据的情况下，更改其引用，并不满足ag-grid-vue的要求会导致报错\r\n        columnDefs: [],\r\n        // 表格行数据\r\n        rowData: [],\r\n        // 自定义配置gridOptions，该属性为方法\r\n        gridOptions: null,\r\n        // 自定义默认列配置，该属性为方法\r\n        defaultColDef: null,\r\n      },\r\n      agQueryParams: {\r\n        // 是否初始化表格成功状态，true表示成功，false表示失败；v-if控制\r\n        initTableSuccess: true,\r\n        // 表格接口请求loading,true表示请求中，false表示请求成功\r\n        getDataLoading: true,\r\n        // 总页数，用于封装好的分页组件\r\n        totalPages: 0,\r\n        // 总条数，用于封装好的分页组件\r\n        total: 0,\r\n        // 当前页数，用于封装好的分页组件\r\n        pageNum: 1,\r\n        // 当前条数，用于封装好的分页组件\r\n        pageSize: 100,\r\n        // 列头筛选数据收集对象，暂时不使用\r\n        filterChangedObj: {},\r\n        // BLHeaderSearch组件头部请求参数对象\r\n        queryParam: {},\r\n        // BLHeaderSearch组件展开/收起切换\r\n        toggleSearchStatus: false,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    eventName() {\r\n      const { initColumnDefs } = this.agTableOptions;\r\n      if (initColumnDefs && initColumnDefs.agGridTableId) {\r\n        return initColumnDefs.agGridTableId;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    eventName(newVal) {\r\n      if (newVal) {\r\n        const that = this;\r\n        AgGridUtils.setEventBusListener(newVal, (params) => {\r\n          that.agTableRowOperation(params);\r\n        });\r\n      }\r\n    },\r\n  },\r\n  beforeDestory() {\r\n    // 销毁事件总线，防止多次触发。\r\n    this.eventName && AgGridUtils.removeEventBusListener(this.eventName);\r\n    this.agTableOptions.agTableApi.gridApi.destroy();\r\n\r\n    this.agQueryParams.getDataLoading = true;\r\n    this.agTableOptions.style = null\r\n    this.agTableOptions.agTableApi = null\r\n    this.agTableOptions.initTable = null\r\n    this.agTableOptions.initColumnDefs = null\r\n    this.agTableOptions.defaultColDef = null\r\n    this.agTableOptions.gridOptions = null\r\n    this.agTableOptions.rowData = null\r\n\r\n    this.rowSelectedList = null\r\n    this.agQueryParams.filterChangedObj = {}\r\n    this.agQueryParams.queryParam = {}\r\n\r\n  },\r\n  created() {\r\n    if (!this.fieldsConfig) {\r\n      console.error(\"ag-grid参数[fieldsConfig]是必填项\");\r\n      return false;\r\n    }\r\n    if (this.fieldsConfig.isDefaultDealQueryParamObj !== false) {\r\n      this.dealQueryParamObj();\r\n    }\r\n    if (this.fieldsConfig.isDefaultInitAgGridTable !== false) {\r\n      this.initTable();\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取表格自定义gridOptions【示例方法】\r\n    getCustmoerGridOptions() {\r\n      const gridOptions = {\r\n        rowHeight: 80,\r\n        headerHeight: 60,\r\n        rowSelection: \"single\",\r\n        rowStyle: { backgroundColor: \"#D3D3D3\" },\r\n        getRowHeight: function (params) {\r\n          if (params.node.rowPinned === \"bottom\") {\r\n            return 36;\r\n          } else {\r\n            return 80;\r\n          }\r\n        },\r\n      };\r\n      return gridOptions;\r\n    },\r\n\r\n    // 获取列的默认设置defaultColDef【示例方法】\r\n    getCustomerDefaultColDef() {\r\n      return {\r\n        cellStyle: function (params) {\r\n          if (params.node.rowPinned === \"bottom\") {\r\n            return { color: \"#333\", \"line-height\": \"36px\", height: \"36px\" }; // 列的单元格默认样式\r\n          } else {\r\n            return { color: \"#ff0\", \"line-height\": \"80px\" }; // 列的单元格默认样式\r\n          }\r\n        },\r\n      };\r\n    },\r\n\r\n    // 通过headerSearchConfig拼装agQueryParams.queryParam的属性\r\n    dealQueryParamObj() {\r\n      if (this.headerSearchConfig) {\r\n        const { main, more } = this.headerSearchConfig;\r\n        if (isArray(main) && main.length) {\r\n          const obj = {};\r\n          var searchList = [...main];\r\n          if (isArray(more) && more.length) {\r\n            searchList = [...main, ...more];\r\n          }\r\n          searchList.forEach((ele) => {\r\n            const {\r\n              field,\r\n              type,\r\n              defaultValue,\r\n              selectDefaultValue,\r\n              selectField,\r\n            } = ele;\r\n\r\n            if (type === \"region\") {\r\n              obj[field] = defaultValue || [];\r\n            } else {\r\n              if (field) {\r\n                obj[field] = defaultValue;\r\n              }\r\n              if (selectField) {\r\n                obj[selectField] = selectDefaultValue;\r\n              }\r\n            }\r\n          });\r\n\r\n          console.log(\"obj=====>\", obj);\r\n\r\n          this.$set(this.agQueryParams, \"queryParam\", obj);\r\n          // 是否更改了查询条件\r\n          this.$set(this.agQueryParams, \"isChangeQueryCondition\", false);\r\n          // 通过搜索头执行的搜索次数\r\n          this.$set(this.agQueryParams, \"searchRequestCount\", 0);\r\n          // 存储第一次的最原始查询数据，用于重置回显\r\n          this.$set(this.agQueryParams, \"resetQueryParams\", cloneDeep(obj));\r\n        }\r\n      }\r\n    },\r\n\r\n    // 重置\r\n    searchReset() {\r\n      console.log(\"查询=====12\");\r\n      const { queryParam, resetQueryParams } = this.agQueryParams;\r\n      this.agQueryParams.searchRequestCount = 0;\r\n      this.agQueryParams = Object.assign(this.agQueryParams, {\r\n        initTableSuccess: true,\r\n        getDataLoading: false,\r\n        totalPages: 0,\r\n        total: 0,\r\n        pageNum: 1,\r\n        pageSize: 100,\r\n        filterChangedObj: {},\r\n        queryParam: Object.assign(queryParam, resetQueryParams || {}),\r\n        toggleSearchStatus: false,\r\n      });\r\n      this.geAjaxList();\r\n    },\r\n\r\n    // 请求下一页\r\n    requestNextPage(pageNum) {\r\n      console.log(\"请求下一页\");\r\n      if (this.agQueryParams.totalPages > this.agQueryParams.pageNum) {\r\n        if (pageNum) {\r\n          this.agQueryParams.pageNum = pageNum;\r\n        } else {\r\n          this.agQueryParams.pageNum++;\r\n        }\r\n        this.geAjaxList(this.agQueryParams.queryParam);\r\n      }\r\n    },\r\n\r\n    // 获取多选的行数据\r\n    rowSelected(ele) {\r\n      console.log(\"获取多选的行数据\", ele);\r\n      const selectedRowData =\r\n        this.agTableOptions.agTableApi.getSelectedRows(false);\r\n      console.log(\"获取多选的行数据123\", selectedRowData);\r\n      this.rowSelectedList = selectedRowData || [];\r\n    },\r\n\r\n    // 获取点击的行数据，用于表格的编辑和删除\r\n    getRowData(ele) {\r\n      this.editRowData = ele;\r\n    },\r\n    // 获取表格ag-grid的api\r\n    getGridApi(ele) {\r\n      const agTableApi = new AgGridUtils(ele, this.fieldsConfig);\r\n      console.log(\"agTableApi======>\", agTableApi);\r\n      this.agTableOptions.agTableApi = agTableApi;\r\n    },\r\n\r\n    // 初始化表格, type  default表示默认 , customer 表示自定义请求\r\n    async initTable() {\r\n      try {\r\n        const { style } = this.fieldsConfig;\r\n        this.agQueryParams.initTableSuccess = false;\r\n        this.agQueryParams.pageNum = 1;\r\n        const initColumnDefs = new InitColumnDefs();\r\n        const currentFields = await initColumnDefs.judgeReadServerFieldsData(\r\n          this.fieldsConfig\r\n        );\r\n\r\n        this.agTableOptions.columnDefs = currentFields;\r\n        this.agTableOptions.initColumnDefs = initColumnDefs;\r\n\r\n        if (!this.agTableOptions.initTable) {\r\n          this.agTableOptions.initTable = this.initTable;\r\n        }\r\n\r\n        if (style && isObject(style) && !isEmpty(style)) {\r\n          this.agTableOptions.style = style;\r\n        }\r\n\r\n        this.agQueryParams.initTableSuccess = true;\r\n\r\n        this.geAjaxList();\r\n      } catch (err) {\r\n        console.error(\"err=====>\", err);\r\n        this.$message.error(err?.message || \"初始化表格函数[initTable]报错\");\r\n      }\r\n    },\r\n\r\n    geAjaxList(params = {}) {\r\n      if (this.getList && typeof this.getList === \"function\") {\r\n        this.getList(params);\r\n      } else {\r\n        if (this.fieldsConfig.isDefaultInitAgGridTable !== false) {\r\n          // 自定义方法名称\r\n          console.error(\r\n            \"getList查询接口方法是必要方法，请检查父组件是否有填写\"\r\n          );\r\n        } else {\r\n          console.error(\r\n            \"fieldsConfig对象中的[isDefaultInitAgGridTable]属性已经设置为false,请在父组件中methods编写[geAjaxList]方法替代混入的[geAjaxList]方法\"\r\n          );\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\nexport default AgGridTableMixins;\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"OrderManage\"},[_c('div',{staticClass:\"OrderManage-header\"},[_c('div',{staticClass:\"OrderManage-header-query\"},[_c('BLHeaderSearch',{ref:\"BLHeaderSearch\",attrs:{\"header-search-config\":_vm.headerSearchConfig,\"ag-query-params\":_vm.agQueryParams,\"get-list\":_vm.getList,\"search-reset\":_vm.searchReset}})],1),_c('div',{staticClass:\"OrderManage-header-btn\"},[_c('BLHeaderBtn',{attrs:{\"row-selected-list\":_vm.rowSelectedList,\"btn-config-list\":_vm.btnConfigList},on:{\"headerBtnOperation\":_vm.headerBtnOperation}})],1)]),_c('AgGridTable',{attrs:{\"ag-table-options\":_vm.agTableOptions,\"ag-table-switch\":{\n      isScrollEndRequest: true,\n      drawerDoubleShow: true,\n      \n      isShowExportExcelXlsxBtn: true,\n      isShowExportExcelCsvFile: true,\n      isShowExportExcelStyleXlsxFile: true,\n      isShowExportPdfFile: true,\n      isShowExportHtmlPdfFile: true,\n      isShowExportTextFile: true,\n      isShowExportJsonFile: true,\n      isShowExcelUpload: true,\n    },\"query-params\":_vm.agQueryParams},on:{\"getRowData\":_vm.getRowData,\"getGridApi\":_vm.getGridApi,\"rowSelected\":_vm.rowSelected,\"requestNextPage\":_vm.requestNextPage}}),_c('div',{staticClass:\"webWorker\"},[_c('div',{staticClass:\"webWorker-text\"},[_vm._v(\" \"+_vm._s(_vm.webWorkerText)+\" \")]),_c('div',{staticClass:\"webWorker-btn\"},[_c('BLButton',{on:{\"click\":function($event){return _vm.killWebWorker()}}},[_vm._v(\"杀死进程\")]),_c('BLButton',[_vm._v(\"暂停进程\")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.params.node.rowPinned !=='bottom'),expression:\"params.node.rowPinned !=='bottom'\"}],staticClass:\"AgRowActionBtn\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('BLButton',{staticClass:\"AgRowActionBtn-btn\",attrs:{\"type\":\"link\"},on:{\"click\":function($event){return _vm.operation(_vm.params,'删除')}}},[_vm._v(\"删除\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: junsong Chen 779217162@qq.com\r\n * @Date: 2024-02-03 11:03:58\r\n * @LastEditTime: 2024-05-29 11:30:20\r\n * @Description:\r\n-->\r\n<template>\r\n  <div class=\"AgRowActionBtn\" v-show=\"params.node.rowPinned !=='bottom'\" @click.stop>\r\n    <BLButton type=\"link\" class=\"AgRowActionBtn-btn\" @click=\"operation(params,'删除')\">删除</BLButton>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AgGridUtils } from '@/components/AgGridTable/common/agGrid-utils'\r\n\r\nexport default {\r\n  name: 'AgRowActionBtn',\r\n\r\n  methods: {\r\n    // 设置线路\r\n    operation(params, btnText) {\r\n      const colId = params.colDef.colId\r\n      if (colId) {\r\n        AgGridUtils.EventBus.$emit(colId, {\r\n          btnText,\r\n          params\r\n        })\r\n      } else {\r\n        this.$message.warning('表格操作事件colId未绑定，请联系管理员')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.AgRowActionBtn {\r\n  display: flex;\r\n  gap: 6px;\r\n\r\n  &-btn {\r\n    padding: 0px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../../../../node_modules/.pnpm/thread-loader@3.0.4_webpack@5.91.0/node_modules/thread-loader/dist/cjs.js!../../../../../../../node_modules/.pnpm/babel-loader@8.3.0_@babel+core@7.12.16_webpack@5.91.0/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../../../node_modules/.pnpm/vue-loader@15.11.1_@vue+compiler-sfc@3.4.31_css-loader@6.11.0_webpack@5.91.0__lodash@4.17.21__ppwlbeml3t3pbtwqrqs37ltiwu/node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/.pnpm/source-map-loader@5.0.0_webpack@5.91.0/node_modules/source-map-loader/dist/cjs.js!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../../../node_modules/.pnpm/thread-loader@3.0.4_webpack@5.91.0/node_modules/thread-loader/dist/cjs.js!../../../../../../../node_modules/.pnpm/babel-loader@8.3.0_@babel+core@7.12.16_webpack@5.91.0/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../../../node_modules/.pnpm/vue-loader@15.11.1_@vue+compiler-sfc@3.4.31_css-loader@6.11.0_webpack@5.91.0__lodash@4.17.21__ppwlbeml3t3pbtwqrqs37ltiwu/node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/.pnpm/source-map-loader@5.0.0_webpack@5.91.0/node_modules/source-map-loader/dist/cjs.js!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=54f7f8f2&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=54f7f8f2&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/.pnpm/vue-loader@15.11.1_@vue+compiler-sfc@3.4.31_css-loader@6.11.0_webpack@5.91.0__lodash@4.17.21__ppwlbeml3t3pbtwqrqs37ltiwu/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"54f7f8f2\",\n  null\n  \n)\n\nexport default component.exports","/*\r\n * @Author: junsong Chen 779217162@qq.com\r\n * @Date: 2024-06-05 10:16:06\r\n * @LastEditTime: 2024-06-07 11:28:21\r\n * @Description: 自定义worker class\r\n *\r\n *  写此类的目的是，统一管理worker方法，以及自定义方法，不分散\r\n *  约束web worker 入参和出参，数据统一管理\r\n *  节省应用代码\r\n *  \r\n *  worker 当数据内存大于500M时会崩溃，所以需要拿到一部分数据，就立马导出\r\n *\r\n */\r\nimport { saveAs } from \"file-saver\";\r\n\r\n// 示例\r\nexport const validateConfigRules = {\r\n  // 页面配置\r\n  pageOptions: {\r\n    // 请求参数\r\n    requestParams: {\r\n      url: \"请求参数-请求【url】[string]\",\r\n      method: \"请求参数-请求【method】['get' | 'post']\",\r\n      data: {\r\n        pageNum: \"请求参数-请求当前页[number]\",\r\n        pageSize: \"请求参数-请求页数[number]\",\r\n      },\r\n      headers: {\r\n        Authorization: \"请求头部【Authorization】参数[string]\",\r\n      },\r\n    },\r\n    // 界面参数\r\n    pageParams: {\r\n      total: \"界面参数-总条数[number]\",\r\n      totalPage: \"界面参数-总页面[number]\",\r\n    },\r\n    // 表格排序字段\r\n    sortabledFields: \"表格排序字段[array[]]\",\r\n  },\r\n\r\n  // 请求配置\r\n  requestOptions: {\r\n    maxNum: \"最大并发数[number]\",\r\n    isRequestErrorAndStop: \"请求错误，立即中断循环请求[boolean]\",\r\n    isDealResponseErrorAndStop: \"响应处理错误，立即中断循环请求[boolean]\",\r\n    // 数据响应类型，data 表示直接返回数据，file 表示返回文件\r\n    responseType: \"数据响应类型['data' | 'file']\",\r\n  },\r\n\r\n  // 导出文件配置\r\n  exportFileOptions: {\r\n    fileType: \"文件类型['excel' | 'txt' | 'pdf' | 'json']\",\r\n    fileName: \"文件名称[string]\",\r\n    extName: \"文件后缀名['.xlsx' | '.csv' | '.txt' | '.json' | '.pdf']\",\r\n  },\r\n};\r\n\r\nexport class CustomerRequestWorker {\r\n  // 导出excel文件大小限制，超出100M则不行\r\n  static EXPORT_EXCEL_FILE_SIZE_LIMIT = 90;\r\n  // 请求每页页数大小\r\n  static REQUEST_DEFAULT_PAGE_SIZE = 5000;\r\n  // 请求最大并发数\r\n  static REQUEST_DEFAULT_MAX_NUM = 3;\r\n  // 请求错误，立即中断循环请求[boolean]\r\n  static IS_REQUEST_ERROR_AND_STOP = false;\r\n  // 响应处理错误，立即中断循环请求[boolean]\r\n  static IS_DEAL_RESPONSE_ERROR_AND_STOP = false;\r\n  // 数据响应类型['data' | 'file']，data 表示直接返回数据，file 表示返回文件\r\n  static REQUEST_RESPONSE_TYPE = \"file\";\r\n  // 导出文件名称\r\n  static EXPORT_FILE_NAME = \"Download File\";\r\n\r\n  // Worker 实例\r\n  _myWorker = null;\r\n  // 配置项\r\n  _config = null;\r\n  // 回调函数\r\n  _callback = null;\r\n\r\n  constructor(options, callback) {\r\n    this.init(options, callback);\r\n  }\r\n\r\n  /**\r\n   * @description: 初始化, 因为worker 不能读取文件路径\r\n   * @param {*} workerPath 相对路径\r\n   * @return {*}\r\n   */\r\n  init(options, callback) {\r\n    try {\r\n      const { myWorker, ...config } = options;\r\n      if (myWorker instanceof Worker) {\r\n        this._myWorker = myWorker;\r\n\r\n        if (typeof callback === \"function\") {\r\n          // 回调函数\r\n          this._callback = callback;\r\n\r\n          const dealConfig = this.getDealConfig(config);\r\n          if (dealConfig) {\r\n            // 配置config\r\n            this._config = dealConfig;\r\n            // 发送参数\r\n            this.postMessageFun(dealConfig);\r\n            // 开启监听分发消息\r\n            this.listenAndDispatchMessage();\r\n          }\r\n        } else {\r\n          throw new Error(\"第二参数[callback]需为函数\");\r\n        }\r\n      } else {\r\n        throw new Error(\"第一参数[options]需要传入myWorker实例\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err?.message || \"创建web worker失败\");\r\n    }\r\n  }\r\n\r\n  // 校验配置项config，激活对应功能\r\n  getDealConfig(config) {\r\n    const { pageOptions, requestOptions, exportFileOptions } = config;\r\n\r\n    const dealConfig = {\r\n      // 页面配置\r\n      pageOptions: {\r\n        requestParams: {\r\n          url: pageOptions?.requestParams?.url,\r\n          method: pageOptions?.requestParams?.method,\r\n          data: {\r\n            pageNum: pageOptions?.requestParams?.data?.pageNum,\r\n            pageSize:\r\n              pageOptions?.requestParams?.data?.pageSize ||\r\n              CustomerRequestWorker.REQUEST_DEFAULT_PAGE_SIZE,\r\n          },\r\n          headers: {\r\n            Authorization: pageOptions?.requestParams?.headers?.Authorization,\r\n          },\r\n        },\r\n        pageParams: {\r\n          total: pageOptions?.pageParams?.total,\r\n          totalPage: pageOptions?.pageParams?.totalPage,\r\n        },\r\n        sortabledFields: pageOptions?.sortabledFields || [],\r\n      },\r\n      // 请求配置\r\n      requestOptions: {\r\n        maxNum:\r\n          requestOptions?.maxNum ||\r\n          CustomerRequestWorker.REQUEST_DEFAULT_MAX_NUM,\r\n        isRequestErrorAndStop:\r\n          requestOptions?.isRequestErrorAndStop ||\r\n          CustomerRequestWorker.IS_REQUEST_ERROR_AND_STOP,\r\n        isDealResponseErrorAndStop:\r\n          requestOptions?.isDealResponseErrorAndStop ||\r\n          CustomerRequestWorker.IS_DEAL_RESPONSE_ERROR_AND_STOP,\r\n        responseType:\r\n          requestOptions?.responseType ||\r\n          CustomerRequestWorker.REQUEST_RESPONSE_TYPE,\r\n      },\r\n      // 导出文件配置\r\n      exportFileOptions: {\r\n        fileType: exportFileOptions?.fileType,\r\n        fileName:\r\n          exportFileOptions?.fileName || CustomerRequestWorker.EXPORT_FILE_NAME,\r\n        extName: exportFileOptions?.extName,\r\n      },\r\n    };\r\n\r\n    const nExportFileOptions = this.getExportFileType(\r\n      dealConfig.exportFileOptions.fileType,\r\n      dealConfig.exportFileOptions.fileName\r\n    );\r\n\r\n    console.log(\"nExportFileOptions\", nExportFileOptions);\r\n\r\n    if (nExportFileOptions) {\r\n      console.log(\"dealConfig=====>\", dealConfig);\r\n      const total = dealConfig?.pageOptions?.pageParams?.total;\r\n      const pageNum = dealConfig?.pageOptions?.requestParams?.data?.pageNum;\r\n      const pageSize = pageOptions?.requestParams?.data?.pageSize;\r\n      const rPageSize = dealConfig?.pageOptions?.requestParams?.data?.pageSize;\r\n      const totalPage = Math.ceil(\r\n        (total - (pageNum - 1) * pageSize) / rPageSize\r\n      );\r\n\r\n      dealConfig.exportFileOptions = nExportFileOptions;\r\n      dealConfig.pageOptions.pageParams.totalPage = totalPage;\r\n      return dealConfig;\r\n    } else {\r\n      throw new Error(\"导出文件类型配置错误\");\r\n    }\r\n  }\r\n\r\n  // 获取导出文件类型\r\n  getExportFileType(fileType, fileName) {\r\n    if (fileName) {\r\n      const fileTypeList = {\r\n        excel: {\r\n          fileName,\r\n          extName: \".xlsx\",\r\n        },\r\n        txt: {\r\n          fileName,\r\n          extName: \".txt\",\r\n        },\r\n        pdf: {\r\n          fileName,\r\n          extName: \".pdf\",\r\n        },\r\n        json: {\r\n          fileName,\r\n          extName: \".json\",\r\n        },\r\n      };\r\n\r\n      const fileTypeObj = fileTypeList[fileType];\r\n\r\n      console.log(\"fileTypeObj123123\", fileTypeObj);\r\n\r\n      if (fileTypeObj) {\r\n        return {\r\n          fileType,\r\n          ...fileTypeObj,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  // 发送消息\r\n  postMessageFun(params) {\r\n    this._myWorker.postMessage(params);\r\n  }\r\n\r\n  // 监听并分发消息\r\n  listenAndDispatchMessage() {\r\n    const that = this;\r\n    that._myWorker.onmessage = function (ele) {\r\n      try {\r\n        const result = ele.data;\r\n        console.log(\"监听并分发消息\", result);\r\n\r\n        const { message, data, status } = result;\r\n\r\n        switch (status) {\r\n          case \"config.processing\":\r\n            console.log(\"config.processing\");\r\n            break;\r\n          case \"config.success\":\r\n            console.log(\"config.success\");\r\n            break;\r\n          case \"config.failed\":\r\n            console.log(\"config.failed\");\r\n            that.closeWorker();\r\n            break;\r\n\r\n          case \"request.processing\":\r\n            console.log(\"request.processing\", message);\r\n            console.log(\"数据data=====>\", data);\r\n            break;\r\n          case \"request.success\":\r\n            console.log(\"request.success\", message);\r\n            console.log(\"数据data=====>\", data);\r\n\r\n            break;\r\n          case \"request.failed\":\r\n            console.log(\"request.failed\");\r\n\r\n            break;\r\n\r\n          case \"exportExcel.processing\":\r\n            console.log(\"exportExcel.processing\");\r\n            data && that.saveExcelFileByBolbArr(data, result?.fileNameObj);\r\n            break;\r\n          case \"exportExcel.success\":\r\n            console.log(\"exportExcel.success\");\r\n            break;\r\n          case \"exportExcel.failed\":\r\n            console.log(\"exportExcel.failed\");\r\n            that.closeWorker();\r\n            break;\r\n\r\n          default:\r\n            console.log(\"default\");\r\n            break;\r\n        }\r\n\r\n        that._callback(message);\r\n      } catch (err) {\r\n        console.error(err?.message || \"操作失败\");\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @description: 通过ArrayBuffer计算数据大小MB\r\n   * @param {*} buf 实例化的ArrayBuffer\r\n   * @param {*} sizeUnit 计算的单位 ， MB / KB\r\n   * @return {*}\r\n   */\r\n  calcFileSizeByBuf(buf, sizeUnit = \"MB\") {\r\n    if (sizeUnit === \"MB\") {\r\n      // 转换为MB (1024 bytes per KB, 1024 KB per MB)\r\n      const sizeInMB = buf.byteLength / 1024 / 1024;\r\n      const sizeInMBVal = sizeInMB.toFixed(2);\r\n      console.log(`Size in MB: ${sizeInMBVal}`);\r\n      return sizeInMBVal;\r\n    } else if (sizeUnit === \"KB\") {\r\n      // 转换为KB (1024 bytes per KB)\r\n      const sizeInKB = buf.byteLength / 1024;\r\n      const sizeInKBVal = sizeInKB.toFixed(2);\r\n      console.log(`Size in KB: ${sizeInKBVal}`);\r\n      return sizeInKBVal;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description:\r\n   * @param {*} buf 实例化的ArrayBuffer\r\n   * @return {*}\r\n   */\r\n  isFileSizeOverExportExcelLimit(buf) {\r\n    const dateSize = this.calcFileSizeByBuf(buf);\r\n    return dateSize <= CustomerRequestWorker.EXPORT_EXCEL_FILE_SIZE_LIMIT;\r\n  }\r\n\r\n  // 格式化\r\n  formatDateStr(n) {\r\n    return n > 9 ? n : \"0\" + n;\r\n  }\r\n\r\n  /**\r\n   * @description: 日期时间格式化\r\n   * @param {number} offsetHour 偏移小时\r\n   * @return {*}\r\n   */\r\n  formatSpecDate(offsetHour = 0) {\r\n    let date = new Date();\r\n    const formatDateStr = this.formatDateStr;\r\n    if (offsetHour) {\r\n      const cDate = date.getTime() + offsetHour * 60 * 1000 * 60;\r\n      date = new Date(cDate);\r\n    }\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const hour = date.getHours();\r\n    const minute = date.getMinutes();\r\n\r\n    return `${year}${formatDateStr(month)}${formatDateStr(day)}${formatDateStr(\r\n      hour\r\n    )}${formatDateStr(minute)}`;\r\n  }\r\n\r\n  // 二进制对象数组\r\n  saveExcelFileByBolbArr(blobArr, fileNameObj) {\r\n    if (Array.isArray(blobArr) && blobArr.length) {\r\n      const that = this;\r\n      blobArr.forEach((blob, index) => {\r\n        if (blob) {\r\n          const dateTime = that.formatSpecDate();\r\n          let fileNameStr = `${dateTime}-downLoadExcel-${index + 1}.xlsx`;\r\n          if (fileNameObj?.fileName && fileNameObj?.extName) {\r\n            fileNameStr = `${dateTime}-${fileNameObj.fileName}-${index + 1}${\r\n              fileNameObj.extName\r\n            }`;\r\n          }\r\n          that.saveExcelFileByBolb(blob, fileNameStr);\r\n        }\r\n      });\r\n    } else {\r\n      throw new Error(`导出失败,未获取到二进制数据`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description: 通过二进制数据保存excel文件\r\n   * @param {*} wbout 二进制文件数据\r\n   * @param {*} fileNameStr 文件名\r\n   * @return {*}\r\n   */\r\n  saveExcelFileByBolb(wbout, fileNameStr) {\r\n    const dateSize = this.calcFileSizeByBuf(wbout);\r\n    const limitSize = CustomerRequestWorker.EXPORT_EXCEL_FILE_SIZE_LIMIT;\r\n    const isExport = dateSize <= limitSize;\r\n\r\n    if (isExport) {\r\n      saveAs(\r\n        new Blob([wbout], {\r\n          type: \"application/octet-stream\",\r\n        }),\r\n        fileNameStr\r\n      );\r\n    } else {\r\n      throw new Error(\r\n        `导出失败,当前数据大小为【${dateSize}】已超出导出最大限制【${limitSize}】`\r\n      );\r\n    }\r\n  }\r\n\r\n  // 关闭worker\r\n  closeWorker() {\r\n    this._myWorker?.terminate();\r\n  }\r\n\r\n  // 暂停worker中的request请求\r\n  stopWorkerAjaxRequest() {}\r\n}\r\n","<!--\r\n * @Author: junsong Chen 779217162@qq.com\r\n * @Date: 2024-05-24 14:29:31\r\n * @LastEditTime: 2024-07-24 00:16:59\r\n * @Description: \r\n-->\r\n<template>\r\n  <div class=\"OrderManage\">\r\n    <div class=\"OrderManage-header\">\r\n      <!-- 查询区域 -->\r\n      <div class=\"OrderManage-header-query\">\r\n        <BLHeaderSearch\r\n          :header-search-config=\"headerSearchConfig\"\r\n          :ag-query-params=\"agQueryParams\"\r\n          ref=\"BLHeaderSearch\"\r\n          :get-list=\"getList\"\r\n          :search-reset=\"searchReset\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 操作按钮区域 -->\r\n      <div class=\"OrderManage-header-btn\">\r\n        <BLHeaderBtn\r\n          :row-selected-list=\"rowSelectedList\"\r\n          :btn-config-list=\"btnConfigList\"\r\n          @headerBtnOperation=\"headerBtnOperation\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <AgGridTable\r\n      :ag-table-options=\"agTableOptions\"\r\n      :ag-table-switch=\"{\r\n        isScrollEndRequest: true,\r\n        drawerDoubleShow: true,\r\n        \r\n        isShowExportExcelXlsxBtn: true,\r\n        isShowExportExcelCsvFile: true,\r\n        isShowExportExcelStyleXlsxFile: true,\r\n        isShowExportPdfFile: true,\r\n        isShowExportHtmlPdfFile: true,\r\n        isShowExportTextFile: true,\r\n        isShowExportJsonFile: true,\r\n        isShowExcelUpload: true,\r\n      }\"\r\n      :query-params=\"agQueryParams\"\r\n      @getRowData=\"getRowData\"\r\n      @getGridApi=\"getGridApi\"\r\n      @rowSelected=\"rowSelected\"\r\n      @requestNextPage=\"requestNextPage\"\r\n    />\r\n\r\n    <div class=\"webWorker\">\r\n      <div class=\"webWorker-text\">\r\n        {{ webWorkerText }}\r\n      </div>\r\n      <div class=\"webWorker-btn\">\r\n        <BLButton @click=\"killWebWorker()\">杀死进程</BLButton>\r\n\r\n        <BLButton>暂停进程</BLButton>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrderList, batchDelOrder } from \"@/api/index.js\";\r\nimport AgGridTableMixins from \"@/components/AgGridTable/agTableMixins/index\";\r\nimport AgRowActionBtn from \"./components/AgRowActionBtn/index.vue\";\r\nimport * as storage from \"@/utils/storage\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { CustomerRequestWorker } from \"@/components/AgGridTable/common/Worker/customerRequestWorker.js\";\r\n\r\n// import workerJs from '../../../../components/AgGridTable/common/Worker/orderWorker.worker.js'\r\n\r\nexport default {\r\n  name: \"OrderManage\",\r\n  mixins: [AgGridTableMixins],\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    AgRowActionBtn,\r\n  },\r\n  data() {\r\n    return {\r\n      // 头部搜索配置\r\n      headerSearchConfig: {\r\n        displayIndex: 2,\r\n        main: [\r\n          {\r\n            type: \"fuzzySearch\",\r\n            field: \"searchVal\",\r\n            selectField: \"inField\",\r\n            defaultValue: undefined,\r\n            selectDefaultValue: \"orderNo\",\r\n            options: [\r\n              {\r\n                label: \"订单号\",\r\n                value: \"orderNo\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: \"dateTimeSearch\",\r\n            field: \"dateTime\",\r\n            selectField: \"commonTime\",\r\n            defaultValue: undefined,\r\n            selectDefaultValue: \"startTime,endTime\",\r\n            options: [\r\n              {\r\n                label: \"创建时间\",\r\n                value: \"startTime,endTime\",\r\n              },\r\n              {\r\n                label: \"更新时间\",\r\n                value: \"updateTime\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n\r\n      // 头部操作按钮列表配置\r\n      btnConfigList: [\r\n        {\r\n          btnText: \"批量请求[classic]\",\r\n          type: \"primary\",\r\n          power: \"getTransportNode\",\r\n        },\r\n        {\r\n          btnText: \"批量请求[module]\",\r\n          type: \"primary\",\r\n          power: \"getTransportNode\",\r\n        },\r\n        {\r\n          btnText: \"操作\",\r\n          type: \"primary\",\r\n          power: \"getTransportNode\",\r\n        },\r\n        {\r\n          btnText: \"批量操作\",\r\n          btnType: \"dropdown\",\r\n          afterIcon: \"down\",\r\n          ghost: true,\r\n          power: \"batchOperation\",\r\n          menuItems: [\r\n            {\r\n              btnText: \"删除\",\r\n              icon: \"delete\",\r\n              style: \"color:red;\",\r\n              power: \"batchDelete\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n\r\n      // ag-grid表格字段配置\r\n      fieldsConfig: {\r\n        name: \"订单管理\",\r\n        // 页面中如果有多表，需要字段设置用\r\n        id: \"OrderManage\",\r\n        // 表头\r\n        database: {\r\n          订单号: \"orderNo\",\r\n          托运单单号: \"noteNo\",\r\n          客户单号: \"customerNo\",\r\n          来源单号: \"sourceNo\",\r\n          订单时间: \"orderDate\",\r\n          分段数量: \"orderSplitCount\",\r\n          订单状态: \"orderState\",\r\n          财务审核状态: \"financeAuditState\",\r\n          对账状态: \"billState\",\r\n          核销状态: \"verifyoffState\",\r\n          跟踪状态: \"trackState\",\r\n          是否干线出库: \"isMiddle\",\r\n          是否对接: \"isJoin\",\r\n          对接公司: \"joinCompanyName\",\r\n          对接项目部名称: \"joinProdivisionName\",\r\n          是否系统内组织: \"isSystemInside\",\r\n          货物性质: \"goodsNature\",\r\n          订单件数: \"orderNum\",\r\n          订单重量: \"orderWeight\",\r\n          订单体积: \"orderVolume\",\r\n          计费重量: \"calculationWeight\",\r\n          计费体积: \"calculationVolume\",\r\n          干线单价: \"calculationPrice1\",\r\n          干线单价2: \"calculationPrice2\",\r\n          提货单价: \"deliveryPrice1\",\r\n          提货单价2: \"deliveryPrice2\",\r\n          送货单价: \"sendPrice1\",\r\n          送货单价2: \"sendPrice2\",\r\n          计算方式: \"calculateMode\",\r\n          阶梯类型: \"ladderType\",\r\n          增减费合计: \"addCutFee\",\r\n          产品类型: \"productType\",\r\n          运输类型: \"transitType\",\r\n          发站: \"beginSite\",\r\n          到站: \"endSite\",\r\n          发货人: \"beginMan\",\r\n          发货公司: \"beginCompany\",\r\n          发货人电话: \"beginPhone\",\r\n          始发省: \"beginProvince\",\r\n          始发市: \"beginCity\",\r\n          始发区: \"beginArea\",\r\n          始发街道: \"beginStreet\",\r\n          发货详细地址: \"beginAddress\",\r\n          收货人: \"endMan\",\r\n          收货公司: \"endCompany\",\r\n          收货人电话: \"endPhone\",\r\n          目的省: \"endProvince\",\r\n          目的市: \"endCity\",\r\n          目的区: \"endArea\",\r\n          目的街道: \"endStreet\",\r\n          收货详细地址: \"endAddress\",\r\n          交接方式: \"handoverMode\",\r\n          现付: \"nowPay\",\r\n          现付对账剩余金额: \"surplusNowPay\",\r\n          提付: \"fetchPay\",\r\n          提付对账剩余金额: \"surplusFetchPay\",\r\n          月结: \"monthPay\",\r\n          月结对账剩余金额: \"surplusMonthPay\",\r\n          回单付: \"receiptPay\",\r\n          送货费: \"terminalFee\",\r\n          提货费: \"deliveryFee\",\r\n          已核销金额: \"verifyoffMoney\",\r\n          支付方式: \"paymentMode\",\r\n          客户名称: \"customerName\",\r\n          客户公司: \"customerCompany\",\r\n          服务方式: \"serviceFormula\",\r\n          增值服务费合计: \"otherFee\",\r\n          基本运费: \"basicFee\",\r\n          总运费: \"totalFee\",\r\n          总收入合计: \"totalIn\",\r\n          计费方式: \"calculateStandardName\",\r\n          车型: \"carType\",\r\n          车长: \"carLength\",\r\n          是否回单: \"isReceipt\",\r\n          回单份数: \"receiptNum\",\r\n          回单要求: \"receiptRequirement\",\r\n          成本分摊: \"costShare\",\r\n          \"成本率(%)\": \"costRate\",\r\n          提货成本分摊: \"deliveryCost\",\r\n          干线成本分摊: \"trunklineCost\",\r\n          整车成本分摊: \"vehicleCost\",\r\n          送货成本分摊: \"terminalCost\",\r\n          作废人: \"cancelMan\",\r\n          作废时间: \"cancelDate\",\r\n          订单审核人: \"orderAuditMan\",\r\n          订单审核时间: \"orderAuditDate\",\r\n          声明价值: \"declaredValue\",\r\n          付款人: \"payMan\",\r\n          项目部: \"prodivisionName\",\r\n          业务员: \"salesMan\",\r\n          业务员电话: \"salesManPhone\",\r\n          业务所属部门: \"salesDept\",\r\n          服务类型: \"taxType\",\r\n          干线运费: \"trunklineFee\",\r\n          \"税率/干线运费税率\": \"taxRate\",\r\n          订单不含税金额: \"notTaxMoney\",\r\n          不含税干线运费: \"trunkLineFeeNoTax\",\r\n          物流辅助费: \"assistFee\",\r\n          物流辅助费税率: \"assistFeeRate\",\r\n          不含税物流辅助费: \"assistFeeNoTax\",\r\n          物流辅助费对账剩余金额: \"surplusAssistFee\",\r\n          货运代理费: \"agencyFee\",\r\n          货运代理费税率: \"agencyFeeRate\",\r\n          不含税货运代理费: \"agencyFeeNoTax\",\r\n          货运代理费对账剩余金额: \"surplusAgencyFee\",\r\n          销项税金: \"realTax\",\r\n          服务费成本分摊: \"serviceCost\",\r\n          货物名称: \"goodsNameOne\",\r\n          开单人: \"createdBy\",\r\n          开单时间: \"createdTime\",\r\n          修改人: \"updatedBy\",\r\n          修改时间: \"updatedTime\",\r\n          要求提货时间: \"deliveryDate\",\r\n          要求到达时间: \"arriveDate\",\r\n          合同主体: \"invoiceMain\",\r\n          订单备注: \"orderRemark\",\r\n          操作来源: \"operationType\",\r\n        },\r\n        specColumns: [],\r\n        actionColumns: [\r\n          {\r\n            headerName: \"操作\",\r\n            field: \"agTableAction\",\r\n            width: 80,\r\n            cellRendererFramework: \"AgRowActionBtn\",\r\n          },\r\n        ],\r\n      },\r\n\r\n      // web worker 提示语\r\n      webWorkerText: \"提示语\",\r\n\r\n      // web worker进程\r\n      myWorker: null,\r\n\r\n      tmyWorker: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // 查询\r\n    searchQuery(pageNum) {\r\n      this.$refs.BLHeaderSearch.searchQuery(pageNum);\r\n    },\r\n\r\n    // 请求接口\r\n    getList(params) {\r\n      const { pageSize, pageNum, filterChangedObj } = this.agQueryParams;\r\n      // 使用真实字段\r\n      this.agQueryParams.queryParam.isRealField = true;\r\n      this.agQueryParams.getDataLoading = true;\r\n      if (pageNum === 1) {\r\n        this.agTableOptions.rowData = null;\r\n      }\r\n      this.rowSelectedList = null;\r\n      getOrderList({\r\n        pageSize,\r\n        pageNum,\r\n        ...(params || {}),\r\n        ...(filterChangedObj.filterObj || {}),\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res123======>\", res);\r\n\r\n          if (res?.code === 200) {\r\n            const { data: rows, total = 0, pages } = res;\r\n            this.agQueryParams.total = total;\r\n            this.agQueryParams.totalPages = pages;\r\n\r\n            if (pageNum <= 1) {\r\n              this.agTableOptions.rowData = Object.freeze(rows);\r\n            } else {\r\n              // 此方式会导致滚动条回到初始位置\r\n              this.agTableOptions.rowData = Object.freeze([\r\n                ...this.agTableOptions.rowData,\r\n                ...rows,\r\n              ]);\r\n            }\r\n          } else {\r\n            this.$message.error(res.message || \"查询列表失败\");\r\n          }\r\n        })\r\n        .finally(() => {\r\n          this.agQueryParams.getDataLoading = false;\r\n        });\r\n    },\r\n\r\n    // 删除\r\n    deleteConfirm(ids) {\r\n      const that = this;\r\n      that.$confirm({\r\n        title: \"操作确认\",\r\n        content: `删除后无法恢复，您是否确认删除?`,\r\n        onOk: async function () {\r\n          console.log(\"提交\");\r\n          const res = await batchDelOrder({\r\n            ids,\r\n          });\r\n          if (res.code === 200) {\r\n            that.$message.success(\"删除成功\");\r\n            that.getList(that.agQueryParams.queryParam);\r\n          } else {\r\n            that.$message.warning(res.message || \"删除失败\");\r\n          }\r\n        },\r\n      });\r\n    },\r\n    // 批量删除\r\n    batchDelData(rowList) {\r\n      if (rowList?.length) {\r\n        const ids = rowList.map((ele) => ele.id).join(\",\");\r\n        this.deleteConfirm(ids);\r\n      } else {\r\n        this.$message.warning(\"未选择数据\");\r\n      }\r\n    },\r\n\r\n    // 头部按钮操作\r\n    headerBtnOperation(item) {\r\n      console.log(\"头部按钮操作\", item);\r\n      const { btnText } = item;\r\n      switch (btnText) {\r\n        case \"批量请求[classic]\":\r\n          console.log(\"批量请求[classic]\");\r\n          this.rushDoBatchRequest();\r\n          break;\r\n        case \"批量请求[module]\":\r\n          console.log(\"批量请求[module]\");\r\n          this.rushDoBatchRequest1();\r\n          break;\r\n        case \"操作\":\r\n          console.log(\"操作\", this.agQueryParams);\r\n          break;\r\n        case \"删除\":\r\n          console.log(\"删除\");\r\n          break;\r\n        case \"批量操作-删除\":\r\n          console.log(\"批量操作-删除\");\r\n          this.batchDelData(this.rowSelectedList);\r\n          break;\r\n      }\r\n    },\r\n\r\n    // 表格行数据操作方法\r\n    agTableRowOperation(item) {\r\n      const { params, btnText } = item;\r\n      const rowInfo = params.data;\r\n      this.selectedRowInfo = rowInfo;\r\n      switch (btnText) {\r\n        case \"删除\":\r\n          console.log(\"删除\");\r\n          this.deleteConfirm(rowInfo.id);\r\n          break;\r\n      }\r\n    },\r\n\r\n    // 获取排序字段\r\n    getSortabledFields() {\r\n      const sortabledFields =\r\n        this.agTableOptions.initColumnDefs.sortabledFields;\r\n\r\n      console.log(\"sortabledFields\", sortabledFields);\r\n      let tHeader = [];\r\n      let filterVal = [];\r\n      sortabledFields.forEach((ele) => {\r\n        if (!ele.hide) {\r\n          tHeader.push(ele.headerName);\r\n          filterVal.push(ele.field);\r\n        }\r\n      });\r\n      return {\r\n        tHeader,\r\n        filterVal,\r\n      };\r\n    },\r\n\r\n    getWorkerOptions() {\r\n      const that = this;\r\n      const { pageNum, pageSize, total } = this.agQueryParams;\r\n      const rPageSize = pageSize;\r\n      const totalPage = Math.ceil(\r\n        (total - (pageNum - 1) * pageSize) / rPageSize\r\n      );\r\n      console.log(\"totalPage\", totalPage);\r\n      const Authorization = storage.getStorage(\"token\");\r\n\r\n      const options = {\r\n        pageOptions: {\r\n          // 请求参数\r\n          requestParams: {\r\n            url: \"/api/order/list\",\r\n            method: \"post\",\r\n            data: {\r\n              pageNum,\r\n              pageSize: rPageSize,\r\n            },\r\n            headers: {\r\n              Authorization: `Bearer ${Authorization}`,\r\n            },\r\n          },\r\n          // 界面参数\r\n          pageParams: {\r\n            total,\r\n            totalPage,\r\n          },\r\n          // 表格排序字段\r\n          sortabledFields: that.agTableOptions.initColumnDefs.sortabledFields,\r\n        },\r\n\r\n        requestOptions: {\r\n          maxNum: 2,\r\n          responseType: \"file\",\r\n        },\r\n        exportFileOptions: {\r\n          fileType: \"excel\",\r\n          fileName: \"订单管理\",\r\n        },\r\n      };\r\n\r\n      return options;\r\n    },\r\n\r\n    // 执行批量请求\r\n    rushDoBatchRequest() {\r\n      console.log(\"执行批量请求\");\r\n      const that = this;\r\n      if (window.Worker) {\r\n        if (this.tmyWorker) {\r\n          this.tmyWorker?.terminate();\r\n        }\r\n\r\n        // 创建Web Worker实例\r\n        const tmyWorker = new Worker(\r\n          new URL(\"./testW.worker.js\", import.meta.url)\r\n        );\r\n\r\n        this.tmyWorker = tmyWorker;\r\n\r\n        // 监听来自Worker的消息\r\n        tmyWorker.onmessage = function (ele) {\r\n          const result = ele.data;\r\n          console.log(\"请求获取到参数\", result);\r\n          const { message, postResult, status } = result;\r\n          that.webWorkerText = message;\r\n          console.log(\"postResult123123\", postResult);\r\n\r\n          const saveExcelFile = (wbout) => {\r\n            saveAs(\r\n              new Blob([wbout], {\r\n                type: \"application/octet-stream\",\r\n              }),\r\n              \"test.xlsx\"\r\n            );\r\n          };\r\n\r\n          switch (status) {\r\n            case \"processing\":\r\n              console.log(\"processing\");\r\n              break;\r\n            case \"success\":\r\n              console.log(\"success\");\r\n              saveExcelFile(postResult);\r\n              break;\r\n          }\r\n        };\r\n        const { pageNum, pageSize, total } = this.agQueryParams;\r\n        const rPageSize = pageSize;\r\n        const totalPage = Math.ceil((total - pageNum * pageSize) / rPageSize);\r\n        const Authorization = storage.getStorage(\"token\");\r\n        // 向Worker发送消息（即两个数字）\r\n        tmyWorker.postMessage({\r\n          // 请求参数\r\n          requestParams: {\r\n            url: \"/api/order/list\",\r\n            method: \"post\",\r\n            data: {\r\n              pageNum,\r\n              pageSize: rPageSize,\r\n            },\r\n            headers: {\r\n              Authorization: `Bearer ${Authorization}`,\r\n            },\r\n          },\r\n          // 界面参数\r\n          pageParams: {\r\n            total,\r\n            totalPage,\r\n          },\r\n          // 表格排序字段\r\n          sortabledFields: that.agTableOptions.initColumnDefs.sortabledFields,\r\n        });\r\n      } else {\r\n        console.log(\"Your browser does not support Web Workers.\");\r\n      }\r\n    },\r\n\r\n    // 执行批量请求\r\n    rushDoBatchRequest1() {\r\n      console.log(\"执行批量请求\");\r\n      const that = this;\r\n      if (window.Worker) {\r\n        console.log(\"import.meta.url\", import.meta.url);\r\n        // 创建Web Worker实例\r\n        const myWorker = new Worker(\r\n          new URL(\r\n            // \"@/components/AgGridTable/common/Worker/orderWorker.worker.js\",\r\n            \"@/components/AgGridTable/common/Worker/orderWorker.worker.js\",\r\n            import.meta.url\r\n          )\r\n        );\r\n\r\n        const url = new URL(\r\n          \"@/components/AgGridTable/common/Worker/orderWorker.worker.js\",\r\n          import.meta.url\r\n        );\r\n        console.log(\"url123123\", url);\r\n\r\n        const options = this.getWorkerOptions();\r\n\r\n        console.log(\"options123123123\", options);\r\n\r\n        const cWorker = new CustomerRequestWorker(\r\n          {\r\n            myWorker,\r\n            ...options,\r\n          },\r\n          (res) => {\r\n            console.log(\"父界面获取参数=====>\", res);\r\n            that.webWorkerText = res;\r\n          }\r\n        );\r\n\r\n        console.log(\"cWorker\", cWorker);\r\n        this.myWorker = cWorker;\r\n      } else {\r\n        console.log(\"Your browser does not support Web Workers.\");\r\n      }\r\n    },\r\n\r\n    killWebWorker() {\r\n      this.myWorker?.closeWorker();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.OrderManage {\r\n  &-header {\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.webWorker {\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  gap: 10px;\r\n  &-text {\r\n    color: red;\r\n  }\r\n  &-btn {\r\n    margin-left: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/.pnpm/thread-loader@3.0.4_webpack@5.91.0/node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/.pnpm/babel-loader@8.3.0_@babel+core@7.12.16_webpack@5.91.0/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/.pnpm/vue-loader@15.11.1_@vue+compiler-sfc@3.4.31_css-loader@6.11.0_webpack@5.91.0__lodash@4.17.21__ppwlbeml3t3pbtwqrqs37ltiwu/node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../node_modules/.pnpm/source-map-loader@5.0.0_webpack@5.91.0/node_modules/source-map-loader/dist/cjs.js!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/.pnpm/thread-loader@3.0.4_webpack@5.91.0/node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/.pnpm/babel-loader@8.3.0_@babel+core@7.12.16_webpack@5.91.0/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/.pnpm/vue-loader@15.11.1_@vue+compiler-sfc@3.4.31_css-loader@6.11.0_webpack@5.91.0__lodash@4.17.21__ppwlbeml3t3pbtwqrqs37ltiwu/node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../node_modules/.pnpm/source-map-loader@5.0.0_webpack@5.91.0/node_modules/source-map-loader/dist/cjs.js!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=e42d359c&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=e42d359c&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/.pnpm/vue-loader@15.11.1_@vue+compiler-sfc@3.4.31_css-loader@6.11.0_webpack@5.91.0__lodash@4.17.21__ppwlbeml3t3pbtwqrqs37ltiwu/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e42d359c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["AgGridTableMixins","data","editRowData","rowSelectedList","random6DigitNumber","getRandom6DigitNumber","gridOptions","rowHeight","agTableOptions","theme","style","agTableApi","initTable","initColumnDefs","columnDefs","rowData","defaultColDef","agQueryParams","initTableSuccess","getDataLoading","totalPages","total","pageNum","pageSize","filterChangedObj","queryParam","toggleSearchStatus","computed","eventName","this","agGridTableId","watch","newVal","that","AgGridUtils","setEventBusListener","params","agTableRowOperation","beforeDestory","removeEventBusListener","gridApi","destroy","created","fieldsConfig","console","error","isDefaultDealQueryParamObj","dealQueryParamObj","isDefaultInitAgGridTable","methods","getCustmoerGridOptions","headerHeight","rowSelection","rowStyle","backgroundColor","getRowHeight","node","rowPinned","getCustomerDefaultColDef","cellStyle","color","height","headerSearchConfig","main","more","isArray","length","obj","searchList","forEach","ele","field","type","defaultValue","selectDefaultValue","selectField","log","$set","cloneDeep","searchReset","resetQueryParams","searchRequestCount","Object","assign","geAjaxList","requestNextPage","rowSelected","selectedRowData","getSelectedRows","getRowData","getGridApi","InitColumnDefs","currentFields","judgeReadServerFieldsData","isObject","isEmpty","err","$message","message","getList","render","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","btnConfigList","on","headerBtnOperation","isScrollEndRequest","drawerDoubleShow","isShowExportExcelXlsxBtn","isShowExportExcelCsvFile","isShowExportExcelStyleXlsxFile","isShowExportPdfFile","isShowExportHtmlPdfFile","isShowExportTextFile","isShowExportJsonFile","isShowExcelUpload","_v","_s","webWorkerText","$event","killWebWorker","staticRenderFns","directives","name","rawName","value","expression","stopPropagation","operation","component","CustomerRequestWorker","constructor","options","callback","_defineProperty","init","myWorker","config","Worker","Error","_myWorker","_callback","dealConfig","getDealConfig","_config","postMessageFun","listenAndDispatchMessage","pageOptions","requestOptions","exportFileOptions","requestParams","url","method","REQUEST_DEFAULT_PAGE_SIZE","headers","Authorization","pageParams","totalPage","sortabledFields","maxNum","REQUEST_DEFAULT_MAX_NUM","isRequestErrorAndStop","IS_REQUEST_ERROR_AND_STOP","isDealResponseErrorAndStop","IS_DEAL_RESPONSE_ERROR_AND_STOP","responseType","REQUEST_RESPONSE_TYPE","fileType","fileName","EXPORT_FILE_NAME","extName","nExportFileOptions","getExportFileType","rPageSize","Math","ceil","fileTypeList","excel","txt","pdf","json","fileTypeObj","postMessage","onmessage","result","status","closeWorker","saveExcelFileByBolbArr","fileNameObj","calcFileSizeByBuf","buf","sizeUnit","sizeInMB","byteLength","sizeInMBVal","toFixed","sizeInKB","sizeInKBVal","isFileSizeOverExportExcelLimit","dateSize","EXPORT_EXCEL_FILE_SIZE_LIMIT","formatDateStr","n","formatSpecDate","offsetHour","date","Date","cDate","getTime","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","blobArr","Array","blob","index","dateTime","fileNameStr","saveExcelFileByBolb","wbout","limitSize","isExport","saveAs","Blob","terminate","stopWorkerAjaxRequest"],"sourceRoot":""}
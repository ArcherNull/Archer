{"version":3,"file":"js/942.1529130b.js","mappings":"8OAgBA,SAASA,EAAcC,GAIrB,IAHA,IAAIC,EAAM,GACNC,EAAOF,EAAMG,iBAAiB,MAC9BC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAKI,SAAUD,EAAG,CAIpC,IAHA,IAAIE,EAAS,GACTC,EAAMN,EAAKG,GACXI,EAAUD,EAAIL,iBAAiB,MAC1BO,EAAI,EAAGA,EAAID,EAAQH,SAAUI,EAAG,CACvC,IAAIC,EAAOF,EAAQC,GACfE,EAAUD,EAAKE,aAAa,WAC5BC,EAAUH,EAAKE,aAAa,WAC5BE,EAAYJ,EAAKK,UAmCrB,GAlCkB,KAAdD,GAAoBA,IAAcA,IAAWA,GAAaA,GAG9DX,EAAOa,SAAQ,SAAUC,GACvB,GACEb,GAAKa,EAAMC,EAAEC,GACbf,GAAKa,EAAMG,EAAED,GACbb,EAAOD,QAAUY,EAAMC,EAAEG,GACzBf,EAAOD,QAAUY,EAAMG,EAAEC,EAEzB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAMG,EAAEC,EAAIJ,EAAMC,EAAEG,IAAKC,EAAGhB,EAAOiB,KAAK,KAEjE,KAGIV,GAAWF,KACbE,EAAUA,GAAW,EACrBF,EAAUA,GAAW,EACrBR,EAAOoB,KAAK,CACVL,EAAG,CACDC,EAAGf,EACHiB,EAAGf,EAAOD,QAEZe,EAAG,CACDD,EAAGf,EAAIS,EAAU,EACjBQ,EAAGf,EAAOD,OAASM,EAAU,MAMnCL,EAAOiB,KAAmB,KAAdT,EAAmBA,EAAY,MAGvCH,EAAS,IAAK,IAAIa,EAAI,EAAGA,EAAIb,EAAU,IAAKa,EAAGlB,EAAOiB,KAAK,KACjE,CACAvB,EAAIuB,KAAKjB,EACX,CACA,MAAO,CAACN,EAAKG,EACf,CAEA,SAASsB,EAAQC,EAAGC,GACdA,IAAUD,GAAK,MACnB,IAAIE,EAAQC,KAAKC,MAAMJ,GACvB,OAAQE,EAAQ,IAAIC,KAAKA,KAAKE,IAAI,KAAM,GAAI,MAAQ,KACtD,CAEA,SAASC,EAA2BC,EAAMC,GAYxC,IAXA,IAAIC,EAAK,CAAC,EACNlB,EAAQ,CACVC,EAAG,CACDG,EAAG,IACHF,EAAG,KAELC,EAAG,CACDC,EAAG,EACHF,EAAG,IAGEf,EAAI,EAAGA,GAAK6B,EAAK5B,SAAUD,EAClC,IAAK,IAAIK,EAAI,EAAGA,GAAKwB,EAAK7B,GAAGC,SAAUI,EAAG,CACpCQ,EAAMC,EAAEC,EAAIf,IAAGa,EAAMC,EAAEC,EAAIf,GAC3Ba,EAAMC,EAAEG,EAAIZ,IAAGQ,EAAMC,EAAEG,EAAIZ,GAC3BQ,EAAMG,EAAED,EAAIf,IAAGa,EAAMG,EAAED,EAAIf,GAC3Ba,EAAMG,EAAEC,EAAIZ,IAAGQ,EAAMG,EAAEC,EAAIZ,GAC/B,IAAIC,EAAO,CACTgB,EAAGO,EAAK7B,GAAGK,IAEb,GAAc,MAAVC,EAAKgB,EAAT,CACA,IAAIU,EAAWC,EAAAA,MAAWC,YAAY,CACpCjB,EAAGZ,EACHU,EAAGf,IAGiB,kBAAXM,EAAKgB,EAAgBhB,EAAK6B,EAAI,IACd,mBAAX7B,EAAKgB,EAAiBhB,EAAK6B,EAAI,IACtC7B,EAAKgB,aAAaG,MACzBnB,EAAK6B,EAAI,IACT7B,EAAK8B,EAAIH,EAAAA,IAASI,OAAO,IACzB/B,EAAKgB,EAAID,EAAQf,EAAKgB,IACjBhB,EAAK6B,EAAI,IAEhBJ,EAAGC,GAAY1B,CAda,CAe9B,CAGF,OADIO,EAAMC,EAAEG,EAAI,MAAUc,EAAG,QAAUE,EAAAA,MAAWK,aAAazB,IACxDkB,CACT,CAEA,SAASQ,IACP,KAAMC,gBAAgBD,GAAW,OAAO,IAAIA,EAC5CC,KAAKC,WAAa,GAClBD,KAAKE,OAAS,CAAC,CACjB,CAEA,SAASC,EAAK7B,GAGZ,IAFA,IAAI8B,EAAM,IAAIC,YAAY/B,EAAEb,QACxB6C,EAAO,IAAIC,WAAWH,GACjB1B,EAAI,EAAGA,GAAKJ,EAAEb,SAAUiB,EAAG4B,EAAK5B,GAAuB,IAAlBJ,EAAEkC,WAAW9B,GAC3D,OAAO0B,CACT,CAEO,SAASK,EAAsBC,GACpC,IAAIC,EAAWC,SAASC,eAAeH,GACvCI,EAAQC,IAAI,KACZ,IAAIC,EAAK9D,EAAcyD,GACnBpD,EAASyD,EAAG,GAGZ3B,EAAO2B,EAAG,GACVC,EAAU,UACdH,EAAQC,IAAI1B,GAEZ,IAAI6B,EAAK,IAAInB,EACXR,EAAKH,EAA2BC,GAIlCE,EAAG,WAAahC,EAGhB2D,EAAGjB,WAAWtB,KAAKsC,GACnBC,EAAGhB,OAAOe,GAAW1B,EAErB,IAAI4B,EAAQ1B,EAAAA,MAAWyB,EAAI,CACzBE,SAAU,OACVC,SAAS,EACTC,KAAM,YAGRC,EAAAA,EAAAA,QACE,IAAIC,KAAK,CAACrB,EAAKgB,IAAS,CACtBG,KAAM,6BAER,YAEJ,CAMO,SAASG,EAAqBC,EAAIC,EAAUC,GAGjD,IAAIvC,EAAOsC,EACXtC,EAAKwC,QAAQH,GACb,IAAIT,EAAU,UAEVC,EAAK,IAAInB,EACXR,EAAKH,EAA2BC,GAGlC6B,EAAGjB,WAAWtB,KAAKsC,GACnBC,EAAGhB,OAAOe,GAAW1B,EAErB,IAAI4B,EAAQ1B,EAAAA,MAAWyB,EAAI,CACzBE,SAAU,OACVC,SAAS,EACTC,KAAM,WAEJQ,EAAQF,GAAgB,MAC5BL,EAAAA,EAAAA,QACE,IAAIC,KAAK,CAACrB,EAAKgB,IAAS,CACtBG,KAAM,6BAERQ,EAAQ,QAEZ,CAzLAC,EAAQ,OACRA,EAAQ,OACRA,EAAQ,M","sources":["webpack://AG/./src/components/AgGridTable/common/EXCEL/Export2Excel.js"],"sourcesContent":["/*\r\n * @Author: junsong Chen 779217162@qq.com\r\n * @Date: 2024-04-22 15:42:55\r\n * @LastEditTime: 2024-06-04 16:44:36\r\n * @Description: 参考文档：https://juejin.cn/post/7282950051319595066?searchId=202405061028396619942978A84BCD82DB\r\n */\r\n\r\nimport { saveAs } from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\n/* Export2Excel.js */\r\n/* eslint-disable */\r\nrequire(\"script-loader!file-saver\");\r\nrequire(\"./Blob.js\"); //转二进制用  这边要写你的blob的实际地址\r\nrequire(\"script-loader!xlsx/dist/xlsx.core.min\");\r\n\r\nfunction generateArray(table) {\r\n  var out = [];\r\n  var rows = table.querySelectorAll(\"tr\");\r\n  var ranges = [];\r\n  for (var R = 0; R < rows.length; ++R) {\r\n    var outRow = [];\r\n    var row = rows[R];\r\n    var columns = row.querySelectorAll(\"td\");\r\n    for (var C = 0; C < columns.length; ++C) {\r\n      var cell = columns[C];\r\n      var colspan = cell.getAttribute(\"colspan\");\r\n      var rowspan = cell.getAttribute(\"rowspan\");\r\n      var cellValue = cell.innerText;\r\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\r\n\r\n      //Skip ranges\r\n      ranges.forEach(function (range) {\r\n        if (\r\n          R >= range.s.r &&\r\n          R <= range.e.r &&\r\n          outRow.length >= range.s.c &&\r\n          outRow.length <= range.e.c\r\n        ) {\r\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\r\n        }\r\n      });\r\n\r\n      //Handle Row Span\r\n      if (rowspan || colspan) {\r\n        rowspan = rowspan || 1;\r\n        colspan = colspan || 1;\r\n        ranges.push({\r\n          s: {\r\n            r: R,\r\n            c: outRow.length,\r\n          },\r\n          e: {\r\n            r: R + rowspan - 1,\r\n            c: outRow.length + colspan - 1,\r\n          },\r\n        });\r\n      }\r\n\r\n      //Handle Value\r\n      outRow.push(cellValue !== \"\" ? cellValue : null);\r\n\r\n      //Handle Colspan\r\n      if (colspan) for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\r\n    }\r\n    out.push(outRow);\r\n  }\r\n  return [out, ranges];\r\n}\r\n\r\nfunction datenum(v, date1904) {\r\n  if (date1904) v += 1462;\r\n  var epoch = Date.parse(v);\r\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\r\n}\r\n\r\nfunction sheet_from_array_of_arrays(data, opts) {\r\n  var ws = {};\r\n  var range = {\r\n    s: {\r\n      c: 10000000,\r\n      r: 10000000,\r\n    },\r\n    e: {\r\n      c: 0,\r\n      r: 0,\r\n    },\r\n  };\r\n  for (var R = 0; R != data.length; ++R) {\r\n    for (var C = 0; C != data[R].length; ++C) {\r\n      if (range.s.r > R) range.s.r = R;\r\n      if (range.s.c > C) range.s.c = C;\r\n      if (range.e.r < R) range.e.r = R;\r\n      if (range.e.c < C) range.e.c = C;\r\n      var cell = {\r\n        v: data[R][C],\r\n      };\r\n      if (cell.v == null) continue;\r\n      var cell_ref = XLSX.utils.encode_cell({\r\n        c: C,\r\n        r: R,\r\n      });\r\n\r\n      if (typeof cell.v === \"number\") cell.t = \"n\";\r\n      else if (typeof cell.v === \"boolean\") cell.t = \"b\";\r\n      else if (cell.v instanceof Date) {\r\n        cell.t = \"n\";\r\n        cell.z = XLSX.SSF._table[14];\r\n        cell.v = datenum(cell.v);\r\n      } else cell.t = \"s\";\r\n\r\n      ws[cell_ref] = cell;\r\n    }\r\n  }\r\n  if (range.s.c < 10000000) ws[\"!ref\"] = XLSX.utils.encode_range(range);\r\n  return ws;\r\n}\r\n\r\nfunction Workbook() {\r\n  if (!(this instanceof Workbook)) return new Workbook();\r\n  this.SheetNames = [];\r\n  this.Sheets = {};\r\n}\r\n\r\nfunction s2ab(s) {\r\n  var buf = new ArrayBuffer(s.length);\r\n  var view = new Uint8Array(buf);\r\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;\r\n  return buf;\r\n}\r\n\r\nexport function export_table_to_excel(id) {\r\n  var theTable = document.getElementById(id);\r\n  console.log(\"a\");\r\n  var oo = generateArray(theTable);\r\n  var ranges = oo[1];\r\n\r\n  /* original data */\r\n  var data = oo[0];\r\n  var ws_name = \"SheetJS\";\r\n  console.log(data);\r\n\r\n  var wb = new Workbook(),\r\n    ws = sheet_from_array_of_arrays(data);\r\n\r\n  /* add ranges to worksheet */\r\n  // ws['!cols'] = ['apple', 'banan'];\r\n  ws[\"!merges\"] = ranges;\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: \"xlsx\",\r\n    bookSST: false,\r\n    type: \"binary\",\r\n  });\r\n\r\n  saveAs(\r\n    new Blob([s2ab(wbout)], {\r\n      type: \"application/octet-stream\",\r\n    }),\r\n    \"test.xlsx\"\r\n  );\r\n}\r\n\r\nfunction formatJson(jsonData) {\r\n  console.log(jsonData);\r\n}\r\n\r\nexport function export_json_to_excel(th, jsonData, defaultTitle) {\r\n  /* original data */\r\n\r\n  var data = jsonData;\r\n  data.unshift(th);\r\n  var ws_name = \"SheetJS\";\r\n\r\n  var wb = new Workbook(),\r\n    ws = sheet_from_array_of_arrays(data);\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: \"xlsx\",\r\n    bookSST: false,\r\n    type: \"binary\",\r\n  });\r\n  var title = defaultTitle || \"列表\";\r\n  saveAs(\r\n    new Blob([s2ab(wbout)], {\r\n      type: \"application/octet-stream\",\r\n    }),\r\n    title + \".xlsx\"\r\n  );\r\n}\r\n"],"names":["generateArray","table","out","rows","querySelectorAll","ranges","R","length","outRow","row","columns","C","cell","colspan","getAttribute","rowspan","cellValue","innerText","forEach","range","s","r","e","c","i","push","k","datenum","v","date1904","epoch","Date","parse","UTC","sheet_from_array_of_arrays","data","opts","ws","cell_ref","XLSX","encode_cell","t","z","_table","encode_range","Workbook","this","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","export_table_to_excel","id","theTable","document","getElementById","console","log","oo","ws_name","wb","wbout","bookType","bookSST","type","saveAs","Blob","export_json_to_excel","th","jsonData","defaultTitle","unshift","title","require"],"sourceRoot":""}